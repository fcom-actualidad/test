{"version":3,"sources":["components/Header.jsx","components/Progress.jsx","components/Score.jsx","components/Question.jsx","utils/engine.helpers.js","components/Leaderboard.jsx","components/SaveScore.jsx","components/Profile.jsx","App.jsx","index.jsx"],"names":["Header","_ref","handleSubmit","setWithTimer","loading","loadingQuestions","quizInProgress","isShown","togglePassword","currentPlayer","handleLogout","handleProfile","_jsxs","children","name","className","_jsx","type","onClick","onSubmit","htmlFor","id","defaultValue","disabled","checked","onChange","Progress","questionNum","totalQuestions","percentage","progressRef","useRef","useEffect","current","style","setProperty","ref","Score","score","timer","withTimer","Question","question","handleAnswers","setTimer","lastQuestion","gameEnded","isAnswered","setIsAnswered","useState","chosenAnswer","setChosenAnswer","handleTimeout","answer","questionId","_id","option","time","correct","seconds","countDown","setInterval","clearInterval","console","log","options","map","idx","concat","content","handleChosenAnswer","generalUri","Leaderboard","setError","isLoading","setIsLoading","leaderboard","setLeaderboard","topScorer","setTopScorer","scoresData","async","gameName","ReactSession","get","email","message","axios","method","url","params","headers","length","code","errors","user","error","scores","playerData","data","merge","arr","Object","values","sort","a","b","finalScore","currentUser","array","find","element","findArrayElementByEdit","grade","toFixed","filter","player","SaveScore","category","resetGame","playerName","setPlayerName","Fragment","Profile","myGrades","setMyGrades","getData","grades","game","Date","updated_at","toLocaleDateString","setStoreType","casOptions","version","constant","CAS_VERSION_2_0","casClient","CasClient","App","userInit","undefined","setCurrentPlayer","setIsSHown","gameInitialized","setGameInitialized","setLoading","setLoadingQuestions","questionsBank","setQuestionsBank","currentCategory","setCurrentCategory","currentQuestion","setCurrentQuestion","setQuestionNum","setTotalQuestions","answers","setAnswers","setScore","setQuizInProgress","setGameEnded","profile","setProfile","setNewScoreAndQuestionNum","newScore","isCorrectAnswer","timeout","setTimeout","clearTimeout","e","preventDefault","href","target","value","pass","password","gateway","Promise","resolve","reject","auth","then","successRes","set","mail","catch","errorRes","results","form","status","token","authPlayer","remove","gameCode","uncheckedGameName","checkGame","questions","response","gameId","forEach","q","myDecodedToken","decodeToken","getQuestions","Math","random","fraction","total","floor","answerId","postAnswer","prevData","calculatePercentage","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a1a8fbb.chunk.js","sourcesContent":["function Header({\n\thandleSubmit,\n\tsetWithTimer,\n\tloading,\n\tloadingQuestions,\n\tquizInProgress,\n\tisShown,\n\ttogglePassword,\n\tcurrentPlayer,\n\thandleLogout,\n\thandleProfile\n}) {\n\treturn (\n\t\t<header>\n\t\t\t{currentPlayer && <div>\n\t\t\t\t<h1>Hola, {currentPlayer.name}</h1>\n\t\t\t\t<div className=\"buttons-section\">\n\t\t\t\t\t<button className=\"btn bg-green\" type=\"button\" onClick={handleProfile}>Mis Puntajes</button>\n\t\t\t\t<button className=\"btn bg-red\" type=\"button\" onClick={handleLogout}>Salir</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t}\n\t\t\t{!currentPlayer &&<form onSubmit={handleSubmit}>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\tdefaultValue='email'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='password'>Contraseña</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\ttype={isShown ? \"text\" : \"password\"}\n\t\t\t\t\t\tdefaultValue='contraseña'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t\t<div className=\"checkbox-container\">\n\t\t\t\t\t\t<label htmlFor=\"checkbox\">Mostrar </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"checkbox\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={isShown}\n\t\t\t\t\t\t\tonChange={togglePassword}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t\t{loading\n\t\t\t\t\t\t\t? 'Loading...'\n\t\t\t\t\t\t\t: quizInProgress\n\t\t\t\t\t\t\t? 'En juego'\n\t\t\t\t\t\t\t: 'Ingresar'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>}\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import { useEffect, useRef } from 'react'\n\nfunction Progress({ questionNum, totalQuestions, percentage }) {\n\tconst progressRef = useRef()\n\n\tuseEffect(() => {\n\t\tprogressRef.current.style.setProperty('--progress', percentage)\n\t}, [percentage])\n\n\treturn (\n\t\t<div className='progress-conatiner'>\n\t\t\t<div className='progress-text'>\n\t\t\t\tPregunta {questionNum} de {totalQuestions}\n\t\t\t</div>\n\t\t\t<div ref={progressRef} className='progress-bar'></div>\n\t\t</div>\n\t)\n}\nexport default Progress\n","function Score({ score, timer, withTimer }) {\n\treturn (\n\t\t<div className='score-timer-container'>\n\t\t\t{withTimer && (\n\t\t\t\t<div className='score-timer-border'>\n\t\t\t\t\t<div className='score-timer-text'>Timer</div>\n\t\t\t\t\t<div className='score-timer-number'>{timer}</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t<div className='score-timer-text'>Correctas</div>\n\t\t\t\t<div className='score-timer-number'>{score}</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Score\n","import { useEffect, useRef, useState } from 'react'\n\nfunction Question({\n\tquestion,\n\thandleAnswers,\n\tsetTimer,\n\twithTimer,\n\tlastQuestion,\n\tgameEnded,\n\ttimer,\n}) {\n\tconst [isAnswered, setIsAnswered] = useState(false)\n\tconst [chosenAnswer, setChosenAnswer] = useState('')\n\n\t//enviar respuesta a motor acá\n\tconst handleChosenAnswer = option => {\n\t\tsetChosenAnswer(option)\n\t\tsetIsAnswered(true)\n\t\t//enviar timer también, además de respuesta\n\t\thandleAnswers({\n\t\t\tquestionId: question._id,\n\t\t\toption: option._id,\n\t\t\ttime: question.time - timer,\n\t\t\tscore: question.score + timer,\n\t\t\tcorrect: option.correct\n\t\t})\n\n\t}\n\n\tconst handleTimeout = useRef()\n\n\thandleTimeout.current = () => {\n\t\tsetChosenAnswer(question.answer)\n\t\tsetIsAnswered(true)\n\t\thandleAnswers({\n\t\t\tquestionId: question._id,\n\t\t\toption: null,\n\t\t\ttime: question.time - timer,\n\t\t\tscore: question.score + timer,\n\t\t\tcorrect: false\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tsetChosenAnswer('')\n\t\tsetIsAnswered(false)\n\t}, [question])\n\n\tuseEffect(() => {\n\t\tif (!withTimer) return\n\n\t\tlet seconds = question.time;\n\n\t\tconst countDown = setInterval(() => {\n\t\t\tsetTimer(seconds)\n\t\t\tseconds--\n\n\t\t\tif (isAnswered) {\n\t\t\t\tsetTimer(0)\n\t\t\t\treturn clearInterval(countDown)\n\t\t\t}\n\n\t\t\tif (seconds < 0 && !isAnswered) {\n\t\t\t\tsetTimer(0)\n\t\t\t\thandleTimeout.current()\n\t\t\t\tconsole.log(\"timeout\");\n\t\t\t\treturn clearInterval(countDown)\n\t\t\t}\n\t\t}, 1000)\n\n\t\treturn () => clearInterval(countDown)\n\t}, [withTimer, question, setTimer, isAnswered])\n\n\treturn (\n\t\t<article className='question'>\n\t\t\t<h2>{question.question}</h2>\n\n\t\t\t<ul>\n\t\t\t\t{question.options.map((option, idx) =>\n\t\t\t\t\tisAnswered ? (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={option._id}\n\t\t\t\t\t\t\tclassName={`answered\n\t\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\t\toption === chosenAnswer\n\t\t\t\t\t\t\t\t\t\t? option.correct\n\t\t\t\t\t\t\t\t\t\t\t? 'isRight'\n\t\t\t\t\t\t\t\t\t\t\t: 'isWrong'\n\t\t\t\t\t\t\t\t\t\t: chosenAnswer !== question.answer &&\n\t\t\t\t\t\t\t\t\t\t  option.correct\n\t\t\t\t\t\t\t\t\t\t? 'isRight'\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option.content}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<li key={option._id} onClick={() => handleChosenAnswer(option)}>\n\t\t\t\t\t\t\t{option.content}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</ul>\n\n\t\t\t{isAnswered && !lastQuestion && (\n\t\t\t\t<p>\n\t\t\t\t\tCargando siguiente pregunta... <span className='loader'>⏳</span>\n\t\t\t\t</p>\n\t\t\t)}\n\n\t\t\t{isAnswered && lastQuestion && <p>¡Terminaste! 🏁</p>}\n\n\t\t\t{isAnswered && lastQuestion && !gameEnded && (\n\t\t\t\t<p>\n\t\t\t\t\tCalculando nota... <span className='loader'>⏳</span>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</article>\n\t)\n}\n\nexport default Question\n","import axios from \"axios\";\nimport { ReactSession } from 'react-client-session';\nimport { decodeToken } from \"react-jwt\";\n\nconst generalUri = \"https://engine-fcom.onrender.com/api\";\n//const generalUri = \"http://localhost:3001/api\";\n\nexport const registerPlayer = async (form) => {\n    try {\n        const login = await axios({\n            method: 'POST',\n            url: generalUri+\"/sign/in-user\",\n            //params: { ...apiOptions },\n            data: form,\n        })\n        if (login.data.code !== 200) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: login.data}\n        }\n        ReactSession.set(\"email\", form.email);\n        ReactSession.set(\"name\", login.data.name);\n        //ReactSession.get(\"username\");\n        return {code:200, data: login.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const loginPlayer = async (form) => {\n    try {\n        const login = await axios({\n            method: 'POST',\n            url: generalUri+\"/sign/in-user\",\n            //params: { ...apiOptions },\n            data: form,\n        })\n        if (login.status !== 200) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: login.data}\n        }\n        ReactSession.set(\"email\", form.email);\n        ReactSession.set(\"name\", login.data.name);\n        //ReactSession.get(\"username\");\n        return {code:200, data: login.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const authPlayer = async (form) => {\n    try {\n        const auth = await axios({\n            method: 'POST',\n            url: generalUri + \"/auth\",\n            data: form\n        });\n        console.log(\"aut\",auth);\n        if (auth.status !== 201) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: auth.data}\n        }\n        console.log(auth);\n        ReactSession.set(\"token\",auth.data.token );\n        return {code:200, data: auth.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const checkGame = async (uncheckedGameName) => {\n    try {\n        const game = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/checkGame\",\n            params: {gameName:uncheckedGameName },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n        console.log(\"g\",game);\n        if (game.status !== 200) {\n            return {code:400,errors: '🙁 No logramos encontrar el juego!'}\n        }\n        ReactSession.set(\"gameName\", game.data.gameName);\n        ReactSession.set(\"gameId\", game.data._id);\n        //ReactSession.get(\"username\");\n        return {code:200, data:game.data};\n    } catch (error) {\n        console.log(error)\n        return {code:404,errors:'🙁 No logramos encontrar el juego!'}\n    }\n}\n\nexport const getQuestions = async (gameId) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/questions\",\n            params: {gameId:gameId },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n        if (response.status !== 200) {\n            return undefined;\n        }\n\n        if (response.data.code === 405){\n            return {code:405, data:response.data};\n        }\n\n        response.data.forEach(q=>{\n            q.options.forEach(a =>{\n                const myDecodedToken = decodeToken(a.correct);\n                a.correct = myDecodedToken;\n            })\n        })\n\n        return {code:200, data:response.data};\n    } catch (error) {\n        console.log(error)\n        return {code:404,errors:'🙁 No logramos encontrar el juego!'}\n    }\n\n}\n\nexport const postAnswer = async (questionId, answerId, time) => {\n    const gameId = ReactSession.get(\"gameId\")\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: generalUri+\"/game/answer\",\n            data: {answerId: answerId, gameId: gameId, time: time, questionId: questionId},\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n        if (response.status !== 200) {\n            return undefined;\n        }\n        return {code:200, data:response.data};\n    } catch (error) {\n        console.log(error)\n        return {code:404,errors:'🙁 Error al guardar la respuesta!'}\n    }\n\n}\n\nexport const newMessage = async () => {\n    const gameName = ReactSession.get(\"gameName\");\n    const email = ReactSession.get(\"email\");\n    const userName = ReactSession.get(\"userName\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/messages\",\n            params: {userName: userName, gameName: gameName, email: email },\n        })\n\n        if (!message.results.length) {\n            return {code:400,errors:'🙁 No logramos encontrar el mensaje!'}\n        }\n\n        /*setQuestionsBank(\n            message.results.map((questionItem, index) => {\n                const answer = decodeString(questionItem.correct_answer)\n                const wrongAnswers = [\n                    ...questionItem.incorrect_answers.map(a => decodeString(a)),\n                    answer,\n                ]\n                return {\n                    id: `${index}-${Date.now()}`,\n                    question: decodeString(questionItem.question),\n                    answer: answer,\n                    options: wrongAnswers.sort(() => Math.random() - 0.5),\n                }\n            })\n        )\n        setTotalQuestions(message.results.length)\n        setQuizInProgress(true)*/\n        return {code:200, message:message};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los mensajes.'}\n    }\n}\n\nexport const scores = async () => {\n    const gameName = ReactSession.get(\"gameName\");\n    const email = ReactSession.get(\"email\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/scores\",\n            params: {gameName: gameName, email: email },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n\n        if (message.length > 0) {\n            return {code:400,errors:'🙁 No logramos encontrar los puntajes aún!'}\n        }\n\n        return {code:200, message:message, user: email};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los puntajes.'}\n    }\n}\n\nexport const grades = async () => {\n    const email = ReactSession.get(\"email\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/grades\",\n            params: {email: email },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n\n        if (message.length > 0) {\n            return {code:400,errors:'🙁 No logramos encontrar los puntajes aún!'}\n        }\n\n        return {code:200, message:message, user: email};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los puntajes.'}\n    }\n}\n\n//Auth \"/auth\" +form\n// NextMessage  /game/messages?userName={userName}&gameName={gameName}&stageId={stageId}&character={characterId}\")\n//PostAnswer /game/answer?userName={userName}&gameName={gameName}&stageId={stageId}&character={characterId}\", form)\n//newSave /game/newEmpty\", form)\n//getSave /game?userName={userName}&gameName={gameName}\"\n","import { useEffect, useState } from 'react'\nimport { scores } from '../utils/engine.helpers'\n\nconst mergeSortArray = arr => {\n\t/*const mergedEntriesIntoObject = arr.reduce((acc, val) => {\n\t\tconst key = val.userName.toLowerCase()\n\t\tif (key in acc) {\n\t\t\tacc[key] = { ...acc[key], score: acc[key].finalScore + val.finalScore }\n\t\t} else {\n\t\t\tacc[key] = val\n\t\t}\n\t\treturn acc\n\t}, {})*/\n\tconst sortedArrayByHighScore = Object.values(arr).sort(\n\t\t(a, b) => b.finalScore - a.finalScore\n\t)\n\treturn sortedArrayByHighScore\n}\n\nconst findArrayElementByEdit = (array,email) => {\n\treturn array.find((element) => {\n\t\treturn element.email === email;\n\t})\n}\n\n\nfunction Leaderboard({ setError }) {\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [leaderboard, setLeaderboard] = useState(null)\n\tconst [topScorer, setTopScorer] = useState('')\n\n\tuseEffect(() => {\n\t\t;(async () => {\n\t\t\tsetIsLoading(true)\n\t\t\ttry {\n\t\t\t\tconst scoresData = await scores();\n\t\t\t\tconst playerData = scoresData.message.data;\n\t\t\t\tif (!playerData.length > 0) {\n\t\t\t\t\treturn setIsLoading(false)\n\t\t\t\t}\n\t\t\t\t//setTopScorer(mergeSortArray(playerData)[0])\n\t\t\t\tconst merge = mergeSortArray(playerData);\n\t\t\t\tconst currentUser = findArrayElementByEdit(merge,scoresData.user)\n\t\t\t\tsetTopScorer(currentUser);\n\t\t\t\tsetLeaderboard(merge)\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetError('🙁 Error loading leaderboard.')\n\t\t\t}\n\t\t\tsetIsLoading(false)\n\t\t})()\n\t}, [setError])\n\n\treturn (\n\t\t<div className='leaderboard'>\n\n\t\t\t{topScorer && (\n\t\t\t\t<div className='leaderboard-group gold'>\n\t\t\t\t\t<h3>Tu puntaje Obtenido</h3>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{topScorer.email} - {topScorer.finalScore}\n\t\t\t\t\t</span>\n\t\t\t\t\t<h5>Nota: {(topScorer.grade/10).toFixed(1)}</h5>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<h1>RANKING 🏆</h1>\n\t\t\t{leaderboard &&\n\t\t\t\t\t<div key='' className='leaderboard-group'>\n\t\t\t\t\t\t<h3>Top 10</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{leaderboard.filter((player, idx) => idx < 10).map((player,idx) => (\n\n\t\t\t\t\t\t\t\t<li key={idx}>\n\t\t\t\t\t\t\t\t\t{idx === 0 && '🥇 '}\n\t\t\t\t\t\t\t\t\t{idx === 1 && '🥈 '}\n\t\t\t\t\t\t\t\t\t{idx === 2 && '🥉 '}\n\t\t\t\t\t\t\t\t\t{player.email} - {player.finalScore}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t{isLoading && <h3>Cargando ranking...</h3>}\n\n\t\t\t{!leaderboard && !isLoading && <h3>¡Aún sin puntajes!</h3>}\n\t\t</div>\n\t)\n}\n\nexport default Leaderboard\n","import { Fragment, useState } from 'react'\n\nfunction SaveScore({ category, score, setError, resetGame }) {\n\tconst [playerName, setPlayerName] = useState('')\n\n\tconst saveScore = async e => {\n\t\te.preventDefault()\n\n\t\tif (!playerName || !category || !score) return\n\n\t\ttry {\n\t\t\t//await createPlayer({ category, name: playerName.trim(), score })\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tsetError('🙁 Error saving player score.')\n\t\t}\n\n\t\tresetGame()\n\t}\n\n\treturn (\n\n\t\t\t\t<Fragment>\n\t\t\t\t\t<h3>Revisa tu calificación 🙌</h3>\n\t\t\t\t</Fragment>\n\n\t)\n}\n\nexport default SaveScore\n","import {Fragment, useEffect, useState} from 'react'\nimport {grades, scores} from '../utils/engine.helpers'\n\nfunction Profile({ user, setError, resetGame }) {\n    const [isLoading, setIsLoading] = useState(false)\n    const [myGrades, setMyGrades] = useState(null)\n    useEffect(() => {\n        ;(async () => {\n            setIsLoading(true)\n            try {\n                const getData = await grades(user);\n                let scores = [];\n                scores = (getData.message.data);\n                setMyGrades(scores);\n            } catch (error) {\n                console.log(error)\n                setError('🙁 Error.')\n            }\n            setIsLoading(false)\n        })()\n    }, [setError])\n\n    return (\n        <div className='leaderboard'>\n            <h3>Revisa tus calificaciones 🖥</h3>\n            {myGrades &&\n            <div className='leaderboard-group'>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Fecha</th>\n                                <th>Test</th>\n                                <th>Nota</th>\n                                <th>Puntaje</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                    {myGrades.map((game,idx) => (\n                        <tr key={idx}>\n                            <td>{new Date(game.updated_at).toLocaleDateString()}</td>\n                            <td>{game.gameName}</td>\n                            <td>{(game.grade/10).toFixed(1)}</td>\n                            <td>{game.finalScore}</td>\n                        </tr>\n                    ))}</tbody>\n                </table>\n            </div>\n            }\n\n\n            {isLoading && <h3>Cargando calificaciones...</h3>}\n\n            {!myGrades && !isLoading && <h3>¡Aún sin puntajes!</h3>}\n        </div>\n    )\n}\n\nexport default Profile\n","import {Fragment, useContext, useEffect, useRef, useState} from 'react'\nimport Header from './components/Header'\nimport Progress from './components/Progress'\nimport Score from './components/Score'\nimport Question from './components/Question'\nimport Leaderboard from './components/Leaderboard'\nimport SaveScore from './components/SaveScore'\nimport Profile from './components/Profile'\nimport {loginPlayer, checkGame, authPlayer, getQuestions, postAnswer} from './utils/engine.helpers'\nimport CasClient, { constant } from \"react-cas-client\";\n\nimport { ReactSession } from 'react-client-session';\nReactSession.setStoreType(\"localStorage\");\n\nlet casEndpoint = \"sso.uc.cl\";\nlet casOptions = { version: constant.CAS_VERSION_2_0 };\n\nlet casClient = new CasClient(casEndpoint, casOptions);\n\nfunction attemptCasLogin(gateway) {\n\tconst service = \"https://fcom-actualidad.github.io/test/\";\n\treturn new Promise((resolve, reject) => {\n\t\tcasClient\n\t\t\t.auth(gateway, service)\n\t\t\t.then((successRes) => {\n\t\t\t\t// Login user in state / locationStorage ()\n\t\t\t\t// eg. loginUser(response.user);\n\t\t\t\tconsole.log(successRes.user)\n\t\t\t\tReactSession.set(\"contextUser\",successRes.mail );\n\t\t\t\tconsole.log(\"success\")\n\t\t\t\tconsole.log(successRes)\n\t\t\t\tconsole.log(successRes.mail)\n\t\t\t\t// Update current path to trim any extra params in url\n\t\t\t\t// eg. this.props.history.replace(response.currentPath);\n\t\t\t})\n\t\t\t.catch((errorRes) => {\n\t\t\t\tconsole.log(errorRes)\n\t\t\t\treject(errorRes);\n\t\t\t});\n\t});\n}\n\nfunction logout(path = \"/\") {\n\tcasClient.logout(\"/\");\n}\n\nconst decodeString = string => {\n\tconst text = document.createElement('textarea')\n\ttext.innerHTML = string\n\treturn text.value\n}\n\nconst calculatePercentage = (fraction, total) => {\n\tif (fraction === 0 || total === 0) return 0\n\treturn Math.floor((fraction * 100) / total)\n}\n\nfunction App() {\n\tlet userInit = null;\n\tif(ReactSession.get(\"name\") !== undefined){\n\t\tuserInit = {name:ReactSession.get(\"name\"),email:ReactSession.get(\"email\")}\n\t}\n\n\tconst [currentPlayer, setCurrentPlayer] = useState(userInit)\n\tconst [error, setError] = useState(false)\n\tconst [isShown, setIsSHown] = useState(false);\n\tconst [gameInitialized, setGameInitialized] = useState(false);\n\tconst [loading, setLoading] = useState(false)\n\tconst [loadingQuestions, setLoadingQuestions] = useState(false)\n\tconst [withTimer, setWithTimer] = useState(true)\n\tconst [timer, setTimer] = useState(0)\n\tconst [questionsBank, setQuestionsBank] = useState([])\n\tconst [currentCategory, setCurrentCategory] = useState('General Knowledge')\n\tconst [currentQuestion, setCurrentQuestion] = useState(null)\n\tconst [questionNum, setQuestionNum] = useState(0)\n\tconst [totalQuestions, setTotalQuestions] = useState(0)\n\tconst [answers, setAnswers] = useState([])\n\tconst [score, setScore] = useState(0)\n\tconst [quizInProgress, setQuizInProgress] = useState(false)\n\tconst [gameEnded, setGameEnded] = useState(false)\n\tconst [profile, setProfile] = useState(false)\n\n\n\tconst togglePassword = () => {\n\t\tsetIsSHown((isShown) => !isShown);\n\t};\n\n\tconst resetGame = () => {\n\t\tsetTimer(0)\n\t\tsetQuestionsBank([])\n\t\tsetCurrentCategory('General Knowledge')\n\t\tsetCurrentQuestion(null)\n\t\tsetQuestionNum(0)\n\t\tsetTotalQuestions(0)\n\t\tsetAnswers([])\n\t\tsetScore(0)\n\t\tsetQuizInProgress(false)\n\t\tsetGameEnded(false)\n\t}\n\n\n//función para realizar login en motor\n\tconst handleSubmitLogin = async e => {\n\t\te.preventDefault()\n\t\tsetLoading(true);\n\t\tresetGame()\n\t\tconst email = e.target.email.value;\n\t\tconst pass = e.target.password.value;\n\n\t\tif (!currentPlayer) {\n\t\t\tawait (async function () {\n\t\t\t\ttry {\n\t\t\t\t\tawait attemptCasLogin(false);\n\t\t\t\t\tconsole.log(\"after login\")\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\t//const results = await loginPlayer({email,password:pass});\n\t\tconst results = {code:300,data:{name:\"Juanito\",email:email}}\n\t\tif (results.code === 200){\n\t\t\tsetCurrentPlayer(results.data);\n\t\t\tawait authPlayer({email,password:pass});\n\t\t\tconsole.log(\"logueado!\");\n\t\t} else {\n\t\t\tsetError(results.errors);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n//función para cerrar sesión\n\tconst handleLogout = async e =>{\n\t\te.preventDefault()\n\t\tresetGame()\n\t\tReactSession.remove(\"userName\");\n\t\tReactSession.remove(\"name\");\n\t\tReactSession.remove(\"email\");\n\t\tReactSession.remove(\"gameName\");\n\t\tReactSession.remove(\"gameId\");\n\t\tReactSession.remove(\"token\");\n\t\tsetProfile(false)\n\t\tsetCurrentPlayer(null);\n\t}\n\n\tconst handleMyProfile = async e =>{\n\t\te.preventDefault()\n\t\tsetProfile(true);\n\t}\n\n\tconst handleHome= async e =>{\n\t\te.preventDefault()\n\t\tsetProfile(false);\n\t}\n\n\tconst handleSelectGameSubmit = async e =>{\n\t\te.preventDefault()\n\t\tsetLoading(true);\n\t\tresetGame()\n\t\tconst gameName = e.target.gameCode.value;\n\t\tconst results = await checkGame(gameName);\n\t\tif (results.code === 200){\n\t\t\tsetGameInitialized(true);\n\t\t\tlet questions = await getQuestions(results.data._id);\n\t\t\tif (questions.code === 200){\n\t\t\t\tquestions.data = questions.data.sort(() => Math.random() - 0.5);\n\t\t\t\tquestions.data.forEach(a=>{\n\t\t\t\t\ta.options = a.options.sort(() => Math.random() - 0.5);\n\t\t\t\t})\n\t\t\t\tsetTotalQuestions(questions.data.length);\n\t\t\t\tsetQuestionsBank(questions.data);\n\t\t\t\tsetQuizInProgress(true)\n\t\t\t} else if(questions.code === 405) {\n\t\t\t\tsetGameEnded(true);\n\t\t\t} else {\n\t\t\t\tsetError(questions.errors);\n\t\t\t}\n\n\n\t\t\t//TEMPORAL, SOLO PRUEBA\n\t\t\t// setQuestionsBank(\n\t\t\t// \t[\n\t\t\t// \t\t{id: `00-${Date.now()}`,\n\t\t\t// \t\tquestion: \"Esta es la pregunta 01\",\n\t\t\t// \t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\t// \t\ttime: 30},\n\t\t\t// \t\t{id: `01-${Date.now()}`,\n\t\t\t// \t\tquestion: \"Esta es la pregunta 02\",\n\t\t\t// \t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\t// \t\ttime: 20},\n\t\t\t// \t\t{id: `02-${Date.now()}`,\n\t\t\t// \t\t\tquestion: \"Esta es la pregunta 03\",\n\t\t\t// \t\t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\t// \t\ttime: 25}\n\t\t\t// \t]\n\t\t\t// )\n\n\t\t} else {\n\t\t\tsetError(results.errors);\n\t\t}\n\t\tsetLoading(false);\n\n\n\t}\n\n\tconst handleAnswers = data => {\n\t\tif (!data) return;\n\t\tconsole.log(\"Post answer:\", data,data.questionId, data.option, data.time);\n\t\tpostAnswer(data.questionId, data.option, data.time);\n\t\tsetAnswers(prevData => [...prevData, data])\n\t\tsetScore(score + (data.correct ? 1 : 0))\n\t}\n\n\tconst setNewScoreAndQuestionNum = useRef()\n\n\tsetNewScoreAndQuestionNum.current = () => {\n\t\tlet newScore = score;\n\n\t\tfor (const answer of answers) {\n\t\t\tif (answer !== null && answer.isCorrectAnswer) newScore += 1;\n\t\t}\n\n\t\tsetScore(newScore)\n\n\t\tif (questionNum < totalQuestions) {\n\t\t\tsetCurrentQuestion(questionsBank[questionNum]);\n\t\t\tsetQuestionNum(questionNum + 1)\n\t\t}\n\n\t\tif (questionNum === totalQuestions) setGameEnded(true)\n\t}\n\n\n\tuseEffect(() => {\n\t\tsetCurrentQuestion(questionsBank[0])\n\t\tsetQuestionNum(1)\n\t}, [questionsBank])\n\n\tuseEffect(() => {\n\t\tif (!answers.length) return\n\t\tconst timeout = setTimeout(() => setNewScoreAndQuestionNum.current(), 1500)\n\t\treturn () => clearTimeout(timeout)\n\t}, [answers])\n\n\tuseEffect(() => {\n\t\tconst timeout = setTimeout(() => setError(false), 5000)\n\t\treturn () => clearTimeout(timeout)\n\t}, [error])\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='game-title'><a onClick={handleHome} href=\"/\"><h1> 🚀 TEST DE ACTUALIDAD</h1></a></div>\n\t\t\t<Header\n\t\t\t\thandleSubmit={handleSubmitLogin}\n\t\t\t\tsetWithTimer={setWithTimer}\n\t\t\t\tloading={loading}\n\t\t\t\tloadingQuestions={loadingQuestions}\n\t\t\t\tquizInProgress={quizInProgress}\n\t\t\t\tisShown = {isShown}\n\t\t\t\ttogglePassword = {togglePassword}\n\t\t\t\tcurrentPlayer = {currentPlayer}\n\t\t\t\thandleLogout = {handleLogout}\n\t\t\t\thandleProfile = {handleMyProfile}\n\t\t\t/>\n\n\t\t\t<div className='container'>\n\t\t\t\t{error && <div className='error-message'>{error}</div>}\n\n\t\t\t\t{/*Loader visual para que el usuario sepa que se está ejectuando un proceso*/}\n\n\t\t\t\t{loading && (\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCargando... <span className='loader'>⏳</span>\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\n\t\t\t\t{\n\t\t\t\t\tcurrentPlayer && profile && (!quizInProgress || gameEnded) && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Profile\n\t\t\t\t\t\t\t\tuser={currentPlayer}\n\t\t\t\t\t\t\t\tsetError={setError}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\n\t\t\t\t\t)\n\t\t\t\t}\n\n\n\t\t\t\t{\n\t\t\t\t\tcurrentPlayer && !profile && !quizInProgress && !gameInitialized && (\n\t\t\t\t\t\t<form onSubmit={handleSelectGameSubmit}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>Para responder el test debes indicar primero el código específico de la sesión que te corresponde</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t<label htmlFor='gameCode'>Código de juego</label>\n\t\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\t\t   id='gameCode'\n\t\t\t\t\t\t\t\t\t   defaultValue='secreto'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{loading\n\t\t\t\t\t\t\t\t\t\t? 'Loading...'\n\t\t\t\t\t\t\t\t\t\t: quizInProgress\n\t\t\t\t\t\t\t\t\t\t\t? 'En juego'\n\t\t\t\t\t\t\t\t\t\t\t: 'Responder'}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t{currentQuestion && !gameEnded && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className='flex-between'>\n\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\tquestionNum={questionNum}\n\t\t\t\t\t\t\t\ttotalQuestions={totalQuestions}\n\t\t\t\t\t\t\t\tpercentage={calculatePercentage(questionNum, totalQuestions)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Score\n\t\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\t\t\twithTimer={withTimer}\n\t\t\t\t\t\t\t\ttimer={timer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Question\n\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\thandleAnswers={handleAnswers}\n\t\t\t\t\t\t\tlastQuestion={questionNum === totalQuestions}\n\t\t\t\t\t\t\tgameEnded={gameEnded}\n\t\t\t\t\t\t\tsetTimer={setTimer}\n\t\t\t\t\t\t\twithTimer={withTimer}\n\t\t\t\t\t\t\ttimer={timer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\n\t\t\t\t{gameEnded && !profile && (\n\t\t\t\t\t<SaveScore\n\t\t\t\t\t\tcategory={currentCategory}\n\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\tsetError={setError}\n\t\t\t\t\t\tresetGame={resetGame}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{gameEnded && !profile && (\n\t\t\t\t\t<Leaderboard setError={setError} />\n\t\t\t\t)}\n\n\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}