{"version":3,"sources":["components/Header.jsx","components/Progress.jsx","components/Score.jsx","components/Question.jsx","utils/engine.helpers.js","components/Leaderboard.jsx","components/SaveScore.jsx","components/Profile.jsx","App.jsx","index.jsx"],"names":["Header","handleSubmit","loading","setWithTimer","quizInProgress","loadingQuestions","isShown","togglePassword","currentPlayer","handleLogout","handleProfile","name","className","type","onClick","onSubmit","htmlFor","id","defaultValue","disabled","checked","onChange","Progress","questionNum","totalQuestions","percentage","progressRef","useRef","useEffect","current","style","setProperty","ref","Score","score","timer","withTimer","Question","question","handleAnswers","setTimer","lastQuestion","gameEnded","useState","isAnswered","setIsAnswered","chosenAnwser","setChosenAnwser","handleTimeout","answer","seconds","time","countDown","setInterval","clearInterval","options","map","option","idx","isCorrectAnswer","handleChosenAnser","generalUri","loginPlayer","form","a","axios","method","url","data","login","status","code","errors","ReactSession","set","email","console","log","authPlayer","auth","token","checkGame","uncheckedGameName","params","gameName","headers","get","game","scores","message","length","user","grades","findArrayElementByEdit","array","find","element","Leaderboard","setError","isLoading","setIsLoading","leaderboard","setLeaderboard","topScorer","setTopScorer","scoresData","playerData","arr","merge","Object","values","sort","b","finalScore","currentUser","userName","grade","toFixed","filter","player","SaveScore","category","resetGame","Profile","myGrades","setMyGrades","getData","Date","updated_at","toLocaleDateString","setStoreType","App","userInit","undefined","fraction","total","setCurrentPlayer","error","setIsSHown","gameInitialized","setGameInitialized","setLoading","questionsBank","setQuestionsBank","currentCategory","setCurrentCategory","currentQuestion","setCurrentQuestion","setQuestionNum","setTotalQuestions","answers","setAnswers","setScore","setQuizInProgress","setGameEnded","profile","setProfile","handleSubmitLogin","e","preventDefault","target","value","pass","password","results","remove","handleMyProfile","handleHome","handleSelectGameSubmit","gameCode","questions","now","Math","random","setNewScoreAndQuestionNum","newScore","timeout","setTimeout","clearTimeout","href","floor","prevData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.007e3a91.chunk.js","sourcesContent":["function Header({\n\thandleSubmit,\n\tsetWithTimer,\n\tloading,\n\tloadingQuestions,\n\tquizInProgress,\n\tisShown,\n\ttogglePassword,\n\tcurrentPlayer,\n\thandleLogout,\n\thandleProfile\n}) {\n\treturn (\n\t\t<header>\n\t\t\t{currentPlayer && <div>\n\t\t\t\t<h1>Hola, {currentPlayer.name}</h1>\n\t\t\t\t<div className=\"buttons-section\">\n\t\t\t\t\t<button className=\"btn bg-green\" type=\"button\" onClick={handleProfile}>Mis Puntajes</button>\n\t\t\t\t<button className=\"btn bg-red\" type=\"button\" onClick={handleLogout}>Salir</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t}\n\t\t\t{!currentPlayer &&<form onSubmit={handleSubmit}>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\tdefaultValue='email'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='password'>Contraseña</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\ttype={isShown ? \"text\" : \"password\"}\n\t\t\t\t\t\tdefaultValue='contraseña'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t\t<div className=\"checkbox-container\">\n\t\t\t\t\t\t<label htmlFor=\"checkbox\">Mostrar </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"checkbox\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={isShown}\n\t\t\t\t\t\t\tonChange={togglePassword}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t\t{loading\n\t\t\t\t\t\t\t? 'Loading...'\n\t\t\t\t\t\t\t: quizInProgress\n\t\t\t\t\t\t\t? 'En juego'\n\t\t\t\t\t\t\t: 'Ingresar'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>}\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import { useEffect, useRef } from 'react'\n\nfunction Progress({ questionNum, totalQuestions, percentage }) {\n\tconst progressRef = useRef()\n\n\tuseEffect(() => {\n\t\tprogressRef.current.style.setProperty('--progress', percentage)\n\t}, [percentage])\n\n\treturn (\n\t\t<div className='progress-conatiner'>\n\t\t\t<div className='progress-text'>\n\t\t\t\tQuestion {questionNum} of {totalQuestions}\n\t\t\t</div>\n\t\t\t<div ref={progressRef} className='progress-bar'></div>\n\t\t</div>\n\t)\n}\nexport default Progress\n","function Score({ score, timer, withTimer }) {\n\treturn (\n\t\t<div className='score-timer-container'>\n\t\t\t{withTimer && (\n\t\t\t\t<div className='score-timer-border'>\n\t\t\t\t\t<div className='score-timer-text'>Timer</div>\n\t\t\t\t\t<div className='score-timer-number'>{timer}</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t<div className='score-timer-text'>Score</div>\n\t\t\t\t<div className='score-timer-number'>{score}</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Score\n","import { useEffect, useRef, useState } from 'react'\n\nfunction Question({\n\tquestion,\n\thandleAnswers,\n\tsetTimer,\n\twithTimer,\n\tlastQuestion,\n\tgameEnded,\n}) {\n\tconst [isAnswered, setIsAnswered] = useState(false)\n\tconst [chosenAnwser, setChosenAnwser] = useState('')\n\n\t//enviar respuesta a motor acá\n\tconst handleChosenAnser = option => {\n\t\tsetChosenAnwser(option)\n\t\tsetIsAnswered(true)\n\t\t//enviar timer también, además de respuesta\n\t\thandleAnswers({\n\t\t\tid: question.id,\n\t\t\tisCorrectAnswer: question.answer === option,\n\t\t})\n\t}\n\n\tconst handleTimeout = useRef()\n\n\thandleTimeout.current = () => {\n\t\tsetChosenAnwser(question.answer)\n\t\tsetIsAnswered(true)\n\t\thandleAnswers(null)\n\t}\n\n\tuseEffect(() => {\n\t\tsetChosenAnwser('')\n\t\tsetIsAnswered(false)\n\t}, [question])\n\n\tuseEffect(() => {\n\t\tif (!withTimer) return\n\n\t\tlet seconds = question.time;\n\n\t\tconst countDown = setInterval(() => {\n\t\t\tsetTimer(seconds)\n\t\t\tseconds--\n\n\t\t\tif (isAnswered) {\n\t\t\t\tsetTimer(0)\n\t\t\t\treturn clearInterval(countDown)\n\t\t\t}\n\n\t\t\tif (seconds < 0 && !isAnswered) {\n\t\t\t\tsetTimer(0)\n\t\t\t\thandleTimeout.current()\n\t\t\t\treturn clearInterval(countDown)\n\t\t\t}\n\t\t}, 1000)\n\n\t\treturn () => clearInterval(countDown)\n\t}, [withTimer, question, setTimer, isAnswered])\n\n\treturn (\n\t\t<article className='question'>\n\t\t\t<h2>{question.question}</h2>\n\n\t\t\t<ul>\n\t\t\t\t{question.options.map((option, idx) =>\n\t\t\t\t\tisAnswered ? (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={option}\n\t\t\t\t\t\t\tclassName={`answered\n\t\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\t\toption === chosenAnwser\n\t\t\t\t\t\t\t\t\t\t? chosenAnwser === question.answer\n\t\t\t\t\t\t\t\t\t\t\t? 'isRight'\n\t\t\t\t\t\t\t\t\t\t\t: 'isWrong'\n\t\t\t\t\t\t\t\t\t\t: chosenAnwser !== question.answer &&\n\t\t\t\t\t\t\t\t\t\t  option === question.answer\n\t\t\t\t\t\t\t\t\t\t? 'isRight'\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<li key={option} onClick={() => handleChosenAnser(option)}>\n\t\t\t\t\t\t\t{option}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</ul>\n\n\t\t\t{isAnswered && !lastQuestion && (\n\t\t\t\t<p>\n\t\t\t\t\tCargando siguiente pregunta... <span className='loader'>⏳</span>\n\t\t\t\t</p>\n\t\t\t)}\n\n\t\t\t{isAnswered && lastQuestion && <p>¡Terminaste! 🏁</p>}\n\n\t\t\t{isAnswered && lastQuestion && !gameEnded && (\n\t\t\t\t<p>\n\t\t\t\t\tCalculando nota... <span className='loader'>⏳</span>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</article>\n\t)\n}\n\nexport default Question\n","import axios from \"axios\";\nimport { ReactSession } from 'react-client-session';\n\nconst generalUri = \"https://fcom-actualidad.herokuapp.com/api\";\n//const generalUri = \"https://fractal-interactiva.herokuapp.com/api\";\n//const generalUri = \"http://localhost:3001/api\";\n\nexport const registerPlayer = async (form) => {\n    try {\n        const login = await axios({\n            method: 'POST',\n            url: generalUri+\"/sign/in-user\",\n            //params: { ...apiOptions },\n            data: form,\n        })\n        if (login.data.code !== 200) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: login.data}\n        }\n        ReactSession.set(\"email\", form.email);\n        ReactSession.set(\"name\", login.data.name);\n        //ReactSession.get(\"username\");\n        return {code:200, data: login.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const loginPlayer = async (form) => {\n    try {\n        const login = await axios({\n            method: 'POST',\n            url: generalUri+\"/sign/in-user\",\n            //params: { ...apiOptions },\n            data: form,\n        })\n        if (login.status !== 200) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: login.data}\n        }\n        ReactSession.set(\"email\", form.email);\n        ReactSession.set(\"name\", login.data.name);\n        //ReactSession.get(\"username\");\n        return {code:200, data: login.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const authPlayer = async (form) => {\n    try {\n        const auth = await axios({\n            method: 'POST',\n            url: generalUri + \"/auth\",\n            data: form\n        });\n        console.log(\"aut\",auth);\n        if (auth.status !== 201) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: auth.data}\n        }\n        console.log(auth);\n        ReactSession.set(\"token\",auth.data.token );\n        return {code:200, data: auth.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const checkGame = async (uncheckedGameName) => {\n    try {\n        const game = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/checkGame\",\n            params: {gameName:uncheckedGameName },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n        console.log(\"g\",game);\n        if (game.status !== 200) {\n            return {code:400,errors: '🙁 No logramos encontrar el juego!'}\n        }\n        ReactSession.set(\"gameName\", game.data.gameName);\n        //ReactSession.get(\"username\");\n        return {code:200, data:game.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión.'}\n    }\n}\n\nexport const newMessage = async () => {\n    const gameName = ReactSession.get(\"gameName\");\n    const email = ReactSession.get(\"email\");\n    const userName = ReactSession.get(\"userName\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/messages\",\n            params: {userName: userName, gameName: gameName, email: email },\n        })\n\n        if (!message.results.length) {\n            return {code:400,errors:'🙁 No logramos encontrar el mensaje!'}\n        }\n\n        /*setQuestionsBank(\n            message.results.map((questionItem, index) => {\n                const answer = decodeString(questionItem.correct_answer)\n                const wrongAnswers = [\n                    ...questionItem.incorrect_answers.map(a => decodeString(a)),\n                    answer,\n                ]\n                return {\n                    id: `${index}-${Date.now()}`,\n                    question: decodeString(questionItem.question),\n                    answer: answer,\n                    options: wrongAnswers.sort(() => Math.random() - 0.5),\n                }\n            })\n        )\n        setTotalQuestions(message.results.length)\n        setQuizInProgress(true)*/\n        return {code:200, message:message};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los mensajes.'}\n    }\n}\n\nexport const scores = async () => {\n    const gameName = ReactSession.get(\"gameName\");\n    const email = ReactSession.get(\"email\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/scores\",\n            params: {gameName: gameName, email: email },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n\n        if (message.length > 0) {\n            return {code:400,errors:'🙁 No logramos encontrar los puntajes aún!'}\n        }\n\n        return {code:200, message:message, user: email};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los puntajes.'}\n    }\n}\n\nexport const grades = async () => {\n    const email = ReactSession.get(\"email\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/grades\",\n            params: {email: email },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n\n        if (message.length > 0) {\n            return {code:400,errors:'🙁 No logramos encontrar los puntajes aún!'}\n        }\n\n        return {code:200, message:message, user: email};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los puntajes.'}\n    }\n}\n\n//Auth \"/auth\" +form\n// NextMessage  /game/messages?userName={userName}&gameName={gameName}&stageId={stageId}&character={characterId}\")\n//PostAnswer /game/answer?userName={userName}&gameName={gameName}&stageId={stageId}&character={characterId}\", form)\n//newSave /game/newEmpty\", form)\n//getSave /game?userName={userName}&gameName={gameName}\"\n","import { useEffect, useState } from 'react'\nimport { scores } from '../utils/engine.helpers'\n\nconst mergeSortArray = arr => {\n\t/*const mergedEntriesIntoObject = arr.reduce((acc, val) => {\n\t\tconst key = val.userName.toLowerCase()\n\t\tif (key in acc) {\n\t\t\tacc[key] = { ...acc[key], score: acc[key].finalScore + val.finalScore }\n\t\t} else {\n\t\t\tacc[key] = val\n\t\t}\n\t\treturn acc\n\t}, {})*/\n\tconst sortedArrayByHighScore = Object.values(arr).sort(\n\t\t(a, b) => b.finalScore - a.finalScore\n\t)\n\treturn sortedArrayByHighScore\n}\n\nconst findArrayElementByEdit = (array,email) => {\n\treturn array.find((element) => {\n\t\treturn element.email === email;\n\t})\n}\n\n\nfunction Leaderboard({ setError }) {\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [leaderboard, setLeaderboard] = useState(null)\n\tconst [topScorer, setTopScorer] = useState('')\n\n\tuseEffect(() => {\n\t\t;(async () => {\n\t\t\tsetIsLoading(true)\n\t\t\ttry {\n\t\t\t\tconst scoresData = await scores();\n\t\t\t\tconst playerData = scoresData.message.data;\n\t\t\t\tif (!playerData.length > 0) {\n\t\t\t\t\treturn setIsLoading(false)\n\t\t\t\t}\n\t\t\t\t//setTopScorer(mergeSortArray(playerData)[0])\n\t\t\t\tconsole.log(playerData);\n\t\t\t\tconst merge = mergeSortArray(playerData);\n\t\t\t\tconsole.log(merge);\n\t\t\t\tconst currentUser = findArrayElementByEdit(merge,scoresData.user)\n\t\t\t\tsetTopScorer(currentUser);\n\t\t\t\tsetLeaderboard(merge)\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetError('🙁 Error loading leaderboard.')\n\t\t\t}\n\t\t\tsetIsLoading(false)\n\t\t})()\n\t}, [setError])\n\n\treturn (\n\t\t<div className='leaderboard'>\n\n\t\t\t{topScorer && (\n\t\t\t\t<div className='leaderboard-group gold'>\n\t\t\t\t\t<h3>Tu puntaje Obtenido</h3>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{topScorer.userName} - {topScorer.finalScore}\n\t\t\t\t\t</span>\n\t\t\t\t\t<h5>Nota: {(topScorer.grade/10).toFixed(1)}</h5>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<h1>RANKING 🏆</h1>\n\t\t\t{leaderboard &&\n\t\t\t\t\t<div key='' className='leaderboard-group'>\n\t\t\t\t\t\t<h3>Top 10</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{leaderboard.filter((player, idx) => idx < 10).map((player,idx) => (\n\n\t\t\t\t\t\t\t\t<li key={player}>\n\t\t\t\t\t\t\t\t\t{idx === 0 && '🥇 '}\n\t\t\t\t\t\t\t\t\t{idx === 1 && '🥈 '}\n\t\t\t\t\t\t\t\t\t{idx === 2 && '🥉 '}\n\t\t\t\t\t\t\t\t\t{player.email} - {player.finalScore}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t{isLoading && <h3>Cargando ranking...</h3>}\n\n\t\t\t{!leaderboard && !isLoading && <h3>¡Aún sin puntajes!</h3>}\n\t\t</div>\n\t)\n}\n\nexport default Leaderboard\n","import { Fragment, useState } from 'react'\n\nfunction SaveScore({ category, score, setError, resetGame }) {\n\tconst [playerName, setPlayerName] = useState('')\n\n\tconst saveScore = async e => {\n\t\te.preventDefault()\n\n\t\tif (!playerName || !category || !score) return\n\n\t\ttry {\n\t\t\t//await createPlayer({ category, name: playerName.trim(), score })\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tsetError('🙁 Error saving player score.')\n\t\t}\n\n\t\tresetGame()\n\t}\n\n\treturn (\n\n\t\t\t\t<Fragment>\n\t\t\t\t\t<h3>Revisa tu calificación 🙌</h3>\n\t\t\t\t</Fragment>\n\n\t)\n}\n\nexport default SaveScore\n","import {Fragment, useEffect, useState} from 'react'\nimport {grades, scores} from '../utils/engine.helpers'\n\nfunction Profile({ user, setError, resetGame }) {\n    const [isLoading, setIsLoading] = useState(false)\n    const [myGrades, setMyGrades] = useState(null)\n    useEffect(() => {\n        ;(async () => {\n            setIsLoading(true)\n            try {\n                const getData = await grades(user);\n                let scores = [];\n                scores = (getData.message.data);\n                setMyGrades(scores);\n            } catch (error) {\n                console.log(error)\n                setError('🙁 Error.')\n            }\n            resetGame()\n            setIsLoading(false)\n        })()\n    }, [setError])\n\n    return (\n        <div className='leaderboard'>\n            <h3>Revisa tus calificaciones 🖥</h3>\n            {myGrades &&\n            <div key='' className='leaderboard-group'>\n                    <table>\n                        <tr>\n                            <th>Fecha</th>\n                            <th>Test</th>\n                            <th>Nota</th>\n                            <th>Puntaje</th>\n                        </tr>\n                    {myGrades.map((game,idx) => (\n                        <tr>\n                            <td>{new Date(game.updated_at).toLocaleDateString()}</td>\n                            <td>{game.gameName}</td>\n                            <td>{game.grade}</td>\n                            <td>{game.finalScore}</td>\n                        </tr>\n                    ))}\n                </table>\n            </div>\n            }\n\n\n            {isLoading && <h3>Cargando calificaciones...</h3>}\n\n            {!myGrades && !isLoading && <h3>¡Aún sin puntajes!</h3>}\n        </div>\n    )\n}\n\nexport default Profile\n","import { Fragment, useEffect, useRef, useState } from 'react'\nimport Header from './components/Header'\nimport Progress from './components/Progress'\nimport Score from './components/Score'\nimport Question from './components/Question'\nimport Leaderboard from './components/Leaderboard'\nimport SaveScore from './components/SaveScore'\nimport Profile from './components/Profile'\nimport {loginPlayer, checkGame, authPlayer} from './utils/engine.helpers'\n\nimport { ReactSession } from 'react-client-session';\nReactSession.setStoreType(\"localStorage\");\n\nconst decodeString = string => {\n\tconst text = document.createElement('textarea')\n\ttext.innerHTML = string\n\treturn text.value\n}\n\nconst calculatePercentage = (fraction, total) => {\n\tif (fraction === 0 || total === 0) return 0\n\treturn Math.floor((fraction * 100) / total)\n}\n\nfunction App() {\n\tlet userInit = null;\n\tif(ReactSession.get(\"name\") !== undefined){\n\t\tuserInit = {name:ReactSession.get(\"name\"),email:ReactSession.get(\"email\")}\n\t}\n\n\tconst [currentPlayer, setCurrentPlayer] = useState(userInit)\n\tconst [error, setError] = useState(false)\n\tconst [isShown, setIsSHown] = useState(false);\n\tconst [gameInitialized, setGameInitialized] = useState(false);\n\tconst [loading, setLoading] = useState(false)\n\tconst [loadingQuestions, setLoadingQuestions] = useState(false)\n\tconst [withTimer, setWithTimer] = useState(true)\n\tconst [timer, setTimer] = useState(0)\n\tconst [questionsBank, setQuestionsBank] = useState([])\n\tconst [currentCategory, setCurrentCategory] = useState('General Knowledge')\n\tconst [currentQuestion, setCurrentQuestion] = useState(null)\n\tconst [questionNum, setQuestionNum] = useState(0)\n\tconst [totalQuestions, setTotalQuestions] = useState(0)\n\tconst [answers, setAnswers] = useState([])\n\tconst [score, setScore] = useState(0)\n\tconst [quizInProgress, setQuizInProgress] = useState(false)\n\tconst [gameEnded, setGameEnded] = useState(false)\n\tconst [profile, setProfile] = useState(false)\n\n\n\tconst togglePassword = () => {\n\t\tsetIsSHown((isShown) => !isShown);\n\t};\n\n\tconst resetGame = () => {\n\t\tsetTimer(0)\n\t\tsetQuestionsBank([])\n\t\tsetCurrentCategory('General Knowledge')\n\t\tsetCurrentQuestion(null)\n\t\tsetQuestionNum(0)\n\t\tsetTotalQuestions(0)\n\t\tsetAnswers([])\n\t\tsetScore(0)\n\t\tsetQuizInProgress(false)\n\t\tsetGameEnded(false)\n\t}\n\n\n//función para realizar login en motor\n\tconst handleSubmitLogin = async e => {\n\t\te.preventDefault()\n\t\tsetLoading(true);\n\t\tresetGame()\n\t\tconst email = e.target.email.value;\n\t\tconst pass = e.target.password.value;\n\t\tconst results = await loginPlayer({email,password:pass});\n\t\tif (results.code === 200){\n\t\t\tsetCurrentPlayer(results.data);\n\t\t\tawait authPlayer({email,password:pass});\n\t\t} else {\n\t\t\tsetError(results.errors);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n//función para cerrar sesión\n\tconst handleLogout = async e =>{\n\t\te.preventDefault()\n\t\tresetGame()\n\t\tReactSession.remove(\"userName\");\n\t\tReactSession.remove(\"name\");\n\t\tReactSession.remove(\"email\");\n\t\tReactSession.remove(\"gameName\");\n\t\tReactSession.remove(\"token\");\n\t\tsetProfile(false)\n\t\tsetCurrentPlayer(null);\n\t}\n\n\tconst handleMyProfile = async e =>{\n\t\te.preventDefault()\n\t\tsetProfile(true);\n\t}\n\n\tconst handleHome= async e =>{\n\t\te.preventDefault()\n\t\tsetProfile(false);\n\t}\n\n\tconst handleSelectGameSubmit = async e =>{\n\t\te.preventDefault()\n\t\tsetLoading(true);\n\t\tresetGame()\n\t\tconst gameName = e.target.gameCode.value;\n\t\tconst results = await checkGame(gameName);\n\t\tif (results.code === 200){\n\t\t\tsetGameInitialized(true);\n\t\t\tsetTotalQuestions(results.data.questions.length);\n\t\t} else {\n\t\t\tsetError(results.errors);\n\t\t}\n\t\tsetLoading(false);\n\n\t\t//TEMPORAL, SOLO PRUEBA\n\t\tsetQuestionsBank([{id: `00-${Date.now()}`,\n\t\t\tquestion: \"Esta es la pregunta 01\",\n\t\t\tanswer: \"opción01\",\n\t\t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\ttime: 30},\n\t\t\t{id: `01-${Date.now()}`,\n\t\t\tquestion: \"Esta es la pregunta 02\",\n\t\t\tanswer: \"opción03\",\n\t\t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\ttime: 20},\n\t\t\t{id: `02-${Date.now()}`,\n\t\t\t\tquestion: \"Esta es la pregunta 03\",\n\t\t\t\tanswer: \"opción02\",\n\t\t\t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\ttime: 25}\n\t\t\t]\n\t\t)\n\t\tsetQuizInProgress(true)\n\t}\n\n\tconst handleAnswers = data => {\n\t\tsetAnswers(prevData => [...prevData, data])\n\t\tsetScore('?')\n\t}\n\n\tconst setNewScoreAndQuestionNum = useRef()\n\n\tsetNewScoreAndQuestionNum.current = () => {\n\t\tlet newScore = 0\n\n\t\tfor (const answer of answers) {\n\t\t\tif (answer !== null && answer.isCorrectAnswer) newScore += 100\n\t\t}\n\n\t\tsetScore(newScore)\n\n\t\tif (questionNum < totalQuestions) {\n\t\t\tsetCurrentQuestion(questionsBank[questionNum])\n\t\t\tsetQuestionNum(questionNum + 1)\n\t\t}\n\n\t\tif (questionNum === totalQuestions) setGameEnded(true)\n\t}\n\n\tuseEffect(() => {\n\t\tsetCurrentQuestion(questionsBank[0])\n\t\tsetQuestionNum(1)\n\t}, [questionsBank])\n\n\tuseEffect(() => {\n\t\tif (!answers.length) return\n\t\tconst timeout = setTimeout(() => setNewScoreAndQuestionNum.current(), 1500)\n\t\treturn () => clearTimeout(timeout)\n\t}, [answers])\n\n\tuseEffect(() => {\n\t\tconst timeout = setTimeout(() => setError(false), 5000)\n\t\treturn () => clearTimeout(timeout)\n\t}, [error])\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='game-title'><a onClick={handleHome} href=\"/\"><h1> 🚀 TEST DE ACTUALIDAD</h1></a></div>\n\t\t\t<Header\n\t\t\t\thandleSubmit={handleSubmitLogin}\n\t\t\t\tsetWithTimer={setWithTimer}\n\t\t\t\tloading={loading}\n\t\t\t\tloadingQuestions={loadingQuestions}\n\t\t\t\tquizInProgress={quizInProgress}\n\t\t\t\tisShown = {isShown}\n\t\t\t\ttogglePassword = {togglePassword}\n\t\t\t\tcurrentPlayer = {currentPlayer}\n\t\t\t\thandleLogout = {handleLogout}\n\t\t\t\thandleProfile = {handleMyProfile}\n\t\t\t/>\n\n\t\t\t<div className='container'>\n\t\t\t\t{error && <div className='error-message'>{error}</div>}\n\n\t\t\t\t{/*Loader visual para que el usuario sepa que se está ejectuando un proceso*/}\n\n\t\t\t\t{loading && (\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCargando... <span className='loader'>⏳</span>\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\n\t\t\t\t{\n\t\t\t\t\tcurrentPlayer && profile && !quizInProgress && !gameInitialized && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Profile\n\t\t\t\t\t\t\t\tuser={currentPlayer}\n\t\t\t\t\t\t\t\tsetError={setError}\n\t\t\t\t\t\t\t\tresetGame={resetGame}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\n\t\t\t\t\t)\n\t\t\t\t}\n\n\n\t\t\t\t{\n\t\t\t\t\tcurrentPlayer && !profile && !quizInProgress && !gameInitialized && (\n\t\t\t\t\t\t<form onSubmit={handleSelectGameSubmit}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>Para responder el test debes indicar primero el código específico de la sesión que te corresponde</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t<label htmlFor='gameCode'>Código de juego</label>\n\t\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\t\t   id='gameCode'\n\t\t\t\t\t\t\t\t\t   defaultValue='secreto'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{loading\n\t\t\t\t\t\t\t\t\t\t? 'Loading...'\n\t\t\t\t\t\t\t\t\t\t: quizInProgress\n\t\t\t\t\t\t\t\t\t\t\t? 'En juego'\n\t\t\t\t\t\t\t\t\t\t\t: 'Responder'}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t{currentQuestion && !gameEnded && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className='flex-between'>\n\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\tquestionNum={questionNum}\n\t\t\t\t\t\t\t\ttotalQuestions={totalQuestions}\n\t\t\t\t\t\t\t\tpercentage={calculatePercentage(questionNum, totalQuestions)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Score\n\t\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\t\t\twithTimer={withTimer}\n\t\t\t\t\t\t\t\ttimer={timer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Question\n\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\thandleAnswers={handleAnswers}\n\t\t\t\t\t\t\tlastQuestion={questionNum === totalQuestions}\n\t\t\t\t\t\t\tgameEnded={gameEnded}\n\t\t\t\t\t\t\tsetTimer={setTimer}\n\t\t\t\t\t\t\twithTimer={withTimer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\n\t\t\t\t{gameEnded && !profile && (\n\t\t\t\t\t<SaveScore\n\t\t\t\t\t\tcategory={currentCategory}\n\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\tsetError={setError}\n\t\t\t\t\t\tresetGame={resetGame}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{gameEnded && !profile && (\n\t\t\t\t\t<Leaderboard setError={setError} />\n\t\t\t\t)}\n\n\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n"],"sourceRoot":""}