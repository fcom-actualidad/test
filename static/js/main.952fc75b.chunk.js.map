{"version":3,"sources":["utils/react-cas-client/url.js","components/Header.jsx","components/Progress.jsx","components/Score.jsx","components/Question.jsx","utils/engine.helpers.js","components/Leaderboard.jsx","components/SaveScore.jsx","components/Profile.jsx","utils/react-cas-client/index.js","App.jsx","index.jsx","utils/react-cas-client/util.js","utils/react-cas-client/constant.js"],"names":["buildUrl","require","constant","util","getLoginUrl","cas","gateway","arguments","length","undefined","baseUrl","_getCasBaseUrl","queryParams","isParamExistsInUrl","redirectUrl","service","status","CAS_STATUS_IN_PROCESS","version","CAS_VERSION_2_0","CAS_VERSION_3_0","path","throwError","getLogoutUrl","redirectPath","window","location","origin","isEmpty","url","params","Object","keys","getValidateUrl","ticket","format","proxy_callback_url","pgtUrl","validation_proxy","protocol","validation_proxy_protocol","getFullProtocol","replace","validation_proxy_endpoint","validation_proxy_path","endpoint","Header","_ref","handleSubmit","setWithTimer","loading","loadingQuestions","quizInProgress","isShown","togglePassword","currentPlayer","handleLogout","handleProfile","_jsxs","children","name","className","_jsx","type","onClick","onSubmit","htmlFor","id","defaultValue","disabled","checked","onChange","Progress","questionNum","totalQuestions","percentage","progressRef","useRef","useEffect","current","style","setProperty","ref","Score","score","timer","withTimer","Question","question","handleAnswers","setTimer","lastQuestion","gameEnded","isAnswered","setIsAnswered","useState","chosenAnswer","setChosenAnswer","handleTimeout","answer","questionId","_id","option","time","correct","seconds","countDown","setInterval","clearInterval","console","log","options","map","idx","concat","content","handleChosenAnswer","generalUri","Leaderboard","setError","isLoading","setIsLoading","leaderboard","setLeaderboard","topScorer","setTopScorer","scoresData","async","gameName","ReactSession","get","email","message","axios","method","headers","code","errors","user","error","scores","playerData","data","merge","arr","values","sort","a","b","finalScore","currentUser","array","find","element","findArrayElementByEdit","grade","toFixed","filter","player","SaveScore","category","resetGame","playerName","setPlayerName","Fragment","Profile","myGrades","setMyGrades","getData","grades","game","Date","updated_at","toLocaleDateString","fetch","xml2js","urls","defaultOptions","CasClient","constructor","CAS_VERSIONS","includes","this","getCurrentUrl","auth","Promise","resolve","reject","getParamFromCurrentUrl","_handleFailsValdiate","CAS_ERROR_AUTH_ERROR","href","_validateTicket","logout","_getSuccessResponse","pgtIou","response","currentUrl","pathname","currentPath","content_type","then","text","parseStringPromise","result","successes","_handleSuccessValdiate","failures","$","trim","_","bind","catch","CAS_ERROR_PARSE_RESPONSE","exception","json","JSON","parse","serviceResponse","authenticationSuccess","proxyGrantingTicket","authenticationFailure","description","CAS_ERROR_FETCH","callback","setStoreType","casClient","App","userInit","setCurrentPlayer","setIsSHown","gameInitialized","setGameInitialized","setLoading","setLoadingQuestions","questionsBank","setQuestionsBank","currentCategory","setCurrentCategory","currentQuestion","setCurrentQuestion","setQuestionNum","setTotalQuestions","answers","setAnswers","setScore","setQuizInProgress","setGameEnded","profile","setProfile","setNewScoreAndQuestionNum","newScore","isCorrectAnswer","timeout","setTimeout","clearTimeout","e","preventDefault","target","value","pass","password","successRes","set","mail","errorRes","results","form","token","authPlayer","remove","gameCode","uncheckedGameName","checkGame","questions","gameId","forEach","q","myDecodedToken","decodeToken","getQuestions","Math","random","fraction","total","floor","answerId","postAnswer","prevData","calculatePercentage","ReactDOM","render","React","StrictMode","document","getElementById","obj","toString","err","Error","withoutTicket","param","URL","searchParams"],"mappings":"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","file":"static/js/main.952fc75b.chunk.js","sourcesContent":["const buildUrl = require('build-url');\n\nconst constant = require('./constant');\n\nconst util = require('./util');\n\nconst getLoginUrl = (cas, gateway = false) => {\n  let baseUrl = _getCasBaseUrl(cas);\n\n  let queryParams = !util.isParamExistsInUrl(cas.redirectUrl, 'status') ? {\n    service: buildUrl(cas.redirectUrl, {\n      queryParams: {\n        status: constant.CAS_STATUS_IN_PROCESS\n      }\n    })\n  } : {\n    service: buildUrl(cas.redirectUrl)\n  };\n\n  if (gateway) {\n    queryParams.gateway = true;\n  }\n\n  switch (cas.version) {\n    case constant.CAS_VERSION_2_0:\n    case constant.CAS_VERSION_3_0:\n      return buildUrl(baseUrl, {\n        path: 'login',\n        queryParams: queryParams\n      });\n\n    default:\n      throw util.throwError('Unsupported CAS Version');\n  }\n};\n\nconst getLogoutUrl = (cas, redirectPath = '') => {\n  let baseUrl = _getCasBaseUrl(cas);\n\n  let redirectUrl = buildUrl(window.location.origin, {\n    path: redirectPath\n  });\n  let queryParams = {};\n\n  switch (cas.version) {\n    case constant.CAS_VERSION_2_0:\n      if (!util.isEmpty(redirectPath)) {\n        queryParams = {\n          url: redirectUrl\n        };\n      }\n\n      break;\n\n    case constant.CAS_VERSION_3_0:\n      if (!util.isEmpty(redirectPath)) {\n        queryParams = {\n          service: redirectUrl\n        };\n      }\n\n      break;\n\n    default:\n      throw util.throwError('Unsupported CAS Version');\n  }\n\n  let params = {\n    path: 'logout'\n  };\n\n  if (Object.keys(queryParams).length !== 0) {\n    params.queryParams = queryParams;\n  }\n\n  return buildUrl(baseUrl, params);\n};\n\nconst getValidateUrl = (cas, ticket) => {\n  let baseUrl = _getCasBaseUrl(cas, true);\n\n  let queryParams = {\n    service: cas.redirectUrl,\n    ticket: ticket\n  };\n  let path = '';\n\n  switch (cas.version) {\n    case constant.CAS_VERSION_2_0:\n      path = 'serviceValidate';\n      break;\n\n    case constant.CAS_VERSION_3_0:\n      path = 'p3/serviceValidate';\n      queryParams.format = 'json';\n      break;\n\n    default:\n      throw util.throwError('Unsupported CAS Version');\n  }\n\n  if (!util.isEmpty(cas.proxy_callback_url)) {\n    queryParams.pgtUrl = cas.proxy_callback_url;\n  }\n\n  return buildUrl(baseUrl, {\n    path: path,\n    queryParams: queryParams\n  });\n};\n\nconst _getCasBaseUrl = (cas, withProxyIfExists = false) => {\n  if (withProxyIfExists && cas.validation_proxy) {\n    const protocol = !util.isEmpty(cas.validation_proxy_protocol) ? util.getFullProtocol(cas.validation_proxy_protocol) : util.getFullProtocol(window.location.protocol);\n    window.location.origin.replace(/(^\\w+:|^)\\/\\//, '');\n    const endpoint = !util.isEmpty(cas.validation_proxy_endpoint) ? cas.validation_proxy_endpoint : window.location.origin.replace(/(^\\w+:|^)\\/\\//, '');\n    return protocol + endpoint + cas.validation_proxy_path;\n  } else {\n    return util.getFullProtocol(cas.protocol) + cas.endpoint + cas.path;\n  }\n};\n\nexport { getLoginUrl, getLogoutUrl, getValidateUrl };\n","function Header({\n\thandleSubmit,\n\tsetWithTimer,\n\tloading,\n\tloadingQuestions,\n\tquizInProgress,\n\tisShown,\n\ttogglePassword,\n\tcurrentPlayer,\n\thandleLogout,\n\thandleProfile\n}) {\n\treturn (\n\t\t<header>\n\t\t\t{currentPlayer && <div>\n\t\t\t\t<h1>Hola, {currentPlayer.name}</h1>\n\t\t\t\t<div className=\"buttons-section\">\n\t\t\t\t\t<button className=\"btn bg-green\" type=\"button\" onClick={handleProfile}>Mis Puntajes</button>\n\t\t\t\t<button className=\"btn bg-red\" type=\"button\" onClick={handleLogout}>Salir</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\t}\n\t\t\t{!currentPlayer &&<form onSubmit={handleSubmit}>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='email'>Email</label>\n\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\tid='email'\n\t\t\t\t\t\tdefaultValue='email'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t</div>\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<label htmlFor='password'>Contraseña</label>\n\t\t\t\t\t<input\n\t\t\t\t\t\tid='password'\n\t\t\t\t\t\ttype={isShown ? \"text\" : \"password\"}\n\t\t\t\t\t\tdefaultValue='contraseña'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t</input>\n\t\t\t\t\t<div className=\"checkbox-container\">\n\t\t\t\t\t\t<label htmlFor=\"checkbox\">Mostrar </label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tid=\"checkbox\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tchecked={isShown}\n\t\t\t\t\t\t\tonChange={togglePassword}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='form-group'>\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t>\n\t\t\t\t\t\t{loading\n\t\t\t\t\t\t\t? 'Loading...'\n\t\t\t\t\t\t\t: quizInProgress\n\t\t\t\t\t\t\t? 'En juego'\n\t\t\t\t\t\t\t: 'Ingresar'}\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</form>}\n\t\t</header>\n\t)\n}\n\nexport default Header\n","import { useEffect, useRef } from 'react'\n\nfunction Progress({ questionNum, totalQuestions, percentage }) {\n\tconst progressRef = useRef()\n\n\tuseEffect(() => {\n\t\tprogressRef.current.style.setProperty('--progress', percentage)\n\t}, [percentage])\n\n\treturn (\n\t\t<div className='progress-conatiner'>\n\t\t\t<div className='progress-text'>\n\t\t\t\tPregunta {questionNum} de {totalQuestions}\n\t\t\t</div>\n\t\t\t<div ref={progressRef} className='progress-bar'></div>\n\t\t</div>\n\t)\n}\nexport default Progress\n","function Score({ score, timer, withTimer }) {\n\treturn (\n\t\t<div className='score-timer-container'>\n\t\t\t{withTimer && (\n\t\t\t\t<div className='score-timer-border'>\n\t\t\t\t\t<div className='score-timer-text'>Timer</div>\n\t\t\t\t\t<div className='score-timer-number'>{timer}</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<div>\n\t\t\t\t<div className='score-timer-text'>Correctas</div>\n\t\t\t\t<div className='score-timer-number'>{score}</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Score\n","import { useEffect, useRef, useState } from 'react'\n\nfunction Question({\n\tquestion,\n\thandleAnswers,\n\tsetTimer,\n\twithTimer,\n\tlastQuestion,\n\tgameEnded,\n\ttimer,\n}) {\n\tconst [isAnswered, setIsAnswered] = useState(false)\n\tconst [chosenAnswer, setChosenAnswer] = useState('')\n\n\t//enviar respuesta a motor acá\n\tconst handleChosenAnswer = option => {\n\t\tsetChosenAnswer(option)\n\t\tsetIsAnswered(true)\n\t\t//enviar timer también, además de respuesta\n\t\thandleAnswers({\n\t\t\tquestionId: question._id,\n\t\t\toption: option._id,\n\t\t\ttime: question.time - timer,\n\t\t\tscore: question.score + timer,\n\t\t\tcorrect: option.correct\n\t\t})\n\n\t}\n\n\tconst handleTimeout = useRef()\n\n\thandleTimeout.current = () => {\n\t\tsetChosenAnswer(question.answer)\n\t\tsetIsAnswered(true)\n\t\thandleAnswers({\n\t\t\tquestionId: question._id,\n\t\t\toption: null,\n\t\t\ttime: question.time - timer,\n\t\t\tscore: question.score + timer,\n\t\t\tcorrect: false\n\t\t})\n\t}\n\n\tuseEffect(() => {\n\t\tsetChosenAnswer('')\n\t\tsetIsAnswered(false)\n\t}, [question])\n\n\tuseEffect(() => {\n\t\tif (!withTimer) return\n\n\t\tlet seconds = question.time;\n\n\t\tconst countDown = setInterval(() => {\n\t\t\tsetTimer(seconds)\n\t\t\tseconds--\n\n\t\t\tif (isAnswered) {\n\t\t\t\tsetTimer(0)\n\t\t\t\treturn clearInterval(countDown)\n\t\t\t}\n\n\t\t\tif (seconds < 0 && !isAnswered) {\n\t\t\t\tsetTimer(0)\n\t\t\t\thandleTimeout.current()\n\t\t\t\tconsole.log(\"timeout\");\n\t\t\t\treturn clearInterval(countDown)\n\t\t\t}\n\t\t}, 1000)\n\n\t\treturn () => clearInterval(countDown)\n\t}, [withTimer, question, setTimer, isAnswered])\n\n\treturn (\n\t\t<article className='question'>\n\t\t\t<h2>{question.question}</h2>\n\n\t\t\t<ul>\n\t\t\t\t{question.options.map((option, idx) =>\n\t\t\t\t\tisAnswered ? (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={option._id}\n\t\t\t\t\t\t\tclassName={`answered\n\t\t\t\t\t\t\t\t${\n\t\t\t\t\t\t\t\t\toption === chosenAnswer\n\t\t\t\t\t\t\t\t\t\t? option.correct\n\t\t\t\t\t\t\t\t\t\t\t? 'isRight'\n\t\t\t\t\t\t\t\t\t\t\t: 'isWrong'\n\t\t\t\t\t\t\t\t\t\t: chosenAnswer !== question.answer &&\n\t\t\t\t\t\t\t\t\t\t  option.correct\n\t\t\t\t\t\t\t\t\t\t? 'isRight'\n\t\t\t\t\t\t\t\t\t\t: ''\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t\t`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{option.content}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<li key={option._id} onClick={() => handleChosenAnswer(option)}>\n\t\t\t\t\t\t\t{option.content}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t)\n\t\t\t\t)}\n\t\t\t</ul>\n\n\t\t\t{isAnswered && !lastQuestion && (\n\t\t\t\t<p>\n\t\t\t\t\tCargando siguiente pregunta... <span className='loader'>⏳</span>\n\t\t\t\t</p>\n\t\t\t)}\n\n\t\t\t{isAnswered && lastQuestion && <p>¡Terminaste! 🏁</p>}\n\n\t\t\t{isAnswered && lastQuestion && !gameEnded && (\n\t\t\t\t<p>\n\t\t\t\t\tCalculando nota... <span className='loader'>⏳</span>\n\t\t\t\t</p>\n\t\t\t)}\n\t\t</article>\n\t)\n}\n\nexport default Question\n","import axios from \"axios\";\nimport { ReactSession } from 'react-client-session';\nimport { decodeToken } from \"react-jwt\";\n\nconst generalUri = \"https://engine-fcom.onrender.com/api\";\n//const generalUri = \"http://localhost:3001/api\";\n\nexport const registerPlayer = async (form) => {\n    try {\n        const login = await axios({\n            method: 'POST',\n            url: generalUri+\"/sign/in-user\",\n            //params: { ...apiOptions },\n            data: form,\n        })\n        if (login.data.code !== 200) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: login.data}\n        }\n        ReactSession.set(\"email\", form.email);\n        ReactSession.set(\"name\", login.data.name);\n        //ReactSession.get(\"username\");\n        return {code:200, data: login.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const loginPlayer = async (form) => {\n    try {\n        const login = await axios({\n            method: 'POST',\n            url: generalUri+\"/sign/in-user\",\n            //params: { ...apiOptions },\n            data: form,\n        })\n        if (login.status !== 200) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: login.data}\n        }\n        ReactSession.set(\"email\", form.email);\n        ReactSession.set(\"name\", login.data.name);\n        //ReactSession.get(\"username\");\n        return {code:200, data: login.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const authPlayer = async (form) => {\n    try {\n        const auth = await axios({\n            method: 'POST',\n            url: generalUri + \"/auth\",\n            data: form\n        });\n        console.log(\"aut\",auth);\n        if (auth.status !== 201) {\n            return {code:400,errors:'🙁 No logramos iniciar sesión!', data: auth.data}\n        }\n        console.log(auth);\n        ReactSession.set(\"token\",auth.data.token );\n        return {code:200, data: auth.data};\n    } catch (error) {\n        console.log(error)\n        return {code:500,errors:'🙁 Ocurrió un error y no logramos iniciar sesión. '}\n    }\n}\n\nexport const checkGame = async (uncheckedGameName) => {\n    try {\n        const game = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/checkGame\",\n            params: {gameName:uncheckedGameName },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n        console.log(\"g\",game);\n        if (game.status !== 200) {\n            return {code:400,errors: '🙁 No logramos encontrar el juego!'}\n        }\n        ReactSession.set(\"gameName\", game.data.gameName);\n        ReactSession.set(\"gameId\", game.data._id);\n        //ReactSession.get(\"username\");\n        return {code:200, data:game.data};\n    } catch (error) {\n        console.log(error)\n        return {code:404,errors:'🙁 No logramos encontrar el juego!'}\n    }\n}\n\nexport const getQuestions = async (gameId) => {\n    try {\n        const response = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/questions\",\n            params: {gameId:gameId },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n        if (response.status !== 200) {\n            return undefined;\n        }\n\n        if (response.data.code === 405){\n            return {code:405, data:response.data};\n        }\n\n        response.data.forEach(q=>{\n            q.options.forEach(a =>{\n                const myDecodedToken = decodeToken(a.correct);\n                a.correct = myDecodedToken;\n            })\n        })\n\n        return {code:200, data:response.data};\n    } catch (error) {\n        console.log(error)\n        return {code:404,errors:'🙁 No logramos encontrar el juego!'}\n    }\n\n}\n\nexport const postAnswer = async (questionId, answerId, time) => {\n    const gameId = ReactSession.get(\"gameId\")\n    try {\n        const response = await axios({\n            method: 'POST',\n            url: generalUri+\"/game/answer\",\n            data: {answerId: answerId, gameId: gameId, time: time, questionId: questionId},\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n        if (response.status !== 200) {\n            return undefined;\n        }\n        return {code:200, data:response.data};\n    } catch (error) {\n        console.log(error)\n        return {code:404,errors:'🙁 Error al guardar la respuesta!'}\n    }\n\n}\n\nexport const newMessage = async () => {\n    const gameName = ReactSession.get(\"gameName\");\n    const email = ReactSession.get(\"email\");\n    const userName = ReactSession.get(\"userName\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/messages\",\n            params: {userName: userName, gameName: gameName, email: email },\n        })\n\n        if (!message.results.length) {\n            return {code:400,errors:'🙁 No logramos encontrar el mensaje!'}\n        }\n\n        /*setQuestionsBank(\n            message.results.map((questionItem, index) => {\n                const answer = decodeString(questionItem.correct_answer)\n                const wrongAnswers = [\n                    ...questionItem.incorrect_answers.map(a => decodeString(a)),\n                    answer,\n                ]\n                return {\n                    id: `${index}-${Date.now()}`,\n                    question: decodeString(questionItem.question),\n                    answer: answer,\n                    options: wrongAnswers.sort(() => Math.random() - 0.5),\n                }\n            })\n        )\n        setTotalQuestions(message.results.length)\n        setQuizInProgress(true)*/\n        return {code:200, message:message};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los mensajes.'}\n    }\n}\n\nexport const scores = async () => {\n    const gameName = ReactSession.get(\"gameName\");\n    const email = ReactSession.get(\"email\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/scores\",\n            params: {gameName: gameName, email: email },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n\n        if (message.length > 0) {\n            return {code:400,errors:'🙁 No logramos encontrar los puntajes aún!'}\n        }\n\n        return {code:200, message:message, user: email};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los puntajes.'}\n    }\n}\n\nexport const grades = async () => {\n    const email = ReactSession.get(\"email\");\n    try {\n        const message = await axios({\n            method: 'GET',\n            url: generalUri+\"/game/grades\",\n            params: {email: email },\n            headers: {\n                'Authorization': \"Bearer \"+ReactSession.get(\"token\")\n            },\n        })\n\n        if (message.length > 0) {\n            return {code:400,errors:'🙁 No logramos encontrar los puntajes aún!'}\n        }\n\n        return {code:200, message:message, user: email};\n    } catch (error) {\n        console.log(error)\n        return {code:500, errors: '🙁 Ocurrió un error y no logramos recuperar los puntajes.'}\n    }\n}\n\n//Auth \"/auth\" +form\n// NextMessage  /game/messages?userName={userName}&gameName={gameName}&stageId={stageId}&character={characterId}\")\n//PostAnswer /game/answer?userName={userName}&gameName={gameName}&stageId={stageId}&character={characterId}\", form)\n//newSave /game/newEmpty\", form)\n//getSave /game?userName={userName}&gameName={gameName}\"\n","import { useEffect, useState } from 'react'\nimport { scores } from '../utils/engine.helpers'\n\nconst mergeSortArray = arr => {\n\t/*const mergedEntriesIntoObject = arr.reduce((acc, val) => {\n\t\tconst key = val.userName.toLowerCase()\n\t\tif (key in acc) {\n\t\t\tacc[key] = { ...acc[key], score: acc[key].finalScore + val.finalScore }\n\t\t} else {\n\t\t\tacc[key] = val\n\t\t}\n\t\treturn acc\n\t}, {})*/\n\tconst sortedArrayByHighScore = Object.values(arr).sort(\n\t\t(a, b) => b.finalScore - a.finalScore\n\t)\n\treturn sortedArrayByHighScore\n}\n\nconst findArrayElementByEdit = (array,email) => {\n\treturn array.find((element) => {\n\t\treturn element.email === email;\n\t})\n}\n\n\nfunction Leaderboard({ setError }) {\n\tconst [isLoading, setIsLoading] = useState(false)\n\tconst [leaderboard, setLeaderboard] = useState(null)\n\tconst [topScorer, setTopScorer] = useState('')\n\n\tuseEffect(() => {\n\t\t;(async () => {\n\t\t\tsetIsLoading(true)\n\t\t\ttry {\n\t\t\t\tconst scoresData = await scores();\n\t\t\t\tconst playerData = scoresData.message.data;\n\t\t\t\tif (!playerData.length > 0) {\n\t\t\t\t\treturn setIsLoading(false)\n\t\t\t\t}\n\t\t\t\t//setTopScorer(mergeSortArray(playerData)[0])\n\t\t\t\tconst merge = mergeSortArray(playerData);\n\t\t\t\tconst currentUser = findArrayElementByEdit(merge,scoresData.user)\n\t\t\t\tsetTopScorer(currentUser);\n\t\t\t\tsetLeaderboard(merge)\n\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error)\n\t\t\t\tsetError('🙁 Error loading leaderboard.')\n\t\t\t}\n\t\t\tsetIsLoading(false)\n\t\t})()\n\t}, [setError])\n\n\treturn (\n\t\t<div className='leaderboard'>\n\n\t\t\t{topScorer && (\n\t\t\t\t<div className='leaderboard-group gold'>\n\t\t\t\t\t<h3>Tu puntaje Obtenido</h3>\n\t\t\t\t\t<span>\n\t\t\t\t\t\t{topScorer.email} - {topScorer.finalScore}\n\t\t\t\t\t</span>\n\t\t\t\t\t<h5>Nota: {(topScorer.grade/10).toFixed(1)}</h5>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t<h1>RANKING 🏆</h1>\n\t\t\t{leaderboard &&\n\t\t\t\t\t<div key='' className='leaderboard-group'>\n\t\t\t\t\t\t<h3>Top 10</h3>\n\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t{leaderboard.filter((player, idx) => idx < 10).map((player,idx) => (\n\n\t\t\t\t\t\t\t\t<li key={idx}>\n\t\t\t\t\t\t\t\t\t{idx === 0 && '🥇 '}\n\t\t\t\t\t\t\t\t\t{idx === 1 && '🥈 '}\n\t\t\t\t\t\t\t\t\t{idx === 2 && '🥉 '}\n\t\t\t\t\t\t\t\t\t{player.email} - {player.finalScore}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\n\t\t\t{isLoading && <h3>Cargando ranking...</h3>}\n\n\t\t\t{!leaderboard && !isLoading && <h3>¡Aún sin puntajes!</h3>}\n\t\t</div>\n\t)\n}\n\nexport default Leaderboard\n","import { Fragment, useState } from 'react'\n\nfunction SaveScore({ category, score, setError, resetGame }) {\n\tconst [playerName, setPlayerName] = useState('')\n\n\tconst saveScore = async e => {\n\t\te.preventDefault()\n\n\t\tif (!playerName || !category || !score) return\n\n\t\ttry {\n\t\t\t//await createPlayer({ category, name: playerName.trim(), score })\n\t\t} catch (error) {\n\t\t\tconsole.log(error)\n\t\t\tsetError('🙁 Error saving player score.')\n\t\t}\n\n\t\tresetGame()\n\t}\n\n\treturn (\n\n\t\t\t\t<Fragment>\n\t\t\t\t\t<h3>Revisa tu calificación 🙌</h3>\n\t\t\t\t</Fragment>\n\n\t)\n}\n\nexport default SaveScore\n","import {Fragment, useEffect, useState} from 'react'\nimport {grades, scores} from '../utils/engine.helpers'\n\nfunction Profile({ user, setError, resetGame }) {\n    const [isLoading, setIsLoading] = useState(false)\n    const [myGrades, setMyGrades] = useState(null)\n    useEffect(() => {\n        ;(async () => {\n            setIsLoading(true)\n            try {\n                const getData = await grades(user);\n                let scores = [];\n                scores = (getData.message.data);\n                setMyGrades(scores);\n            } catch (error) {\n                console.log(error)\n                setError('🙁 Error.')\n            }\n            setIsLoading(false)\n        })()\n    }, [setError])\n\n    return (\n        <div className='leaderboard'>\n            <h3>Revisa tus calificaciones 🖥</h3>\n            {myGrades &&\n            <div className='leaderboard-group'>\n                    <table>\n                        <thead>\n                            <tr>\n                                <th>Fecha</th>\n                                <th>Test</th>\n                                <th>Nota</th>\n                                <th>Puntaje</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                    {myGrades.map((game,idx) => (\n                        <tr key={idx}>\n                            <td>{new Date(game.updated_at).toLocaleDateString()}</td>\n                            <td>{game.gameName}</td>\n                            <td>{(game.grade/10).toFixed(1)}</td>\n                            <td>{game.finalScore}</td>\n                        </tr>\n                    ))}</tbody>\n                </table>\n            </div>\n            }\n\n\n            {isLoading && <h3>Cargando calificaciones...</h3>}\n\n            {!myGrades && !isLoading && <h3>¡Aún sin puntajes!</h3>}\n        </div>\n    )\n}\n\nexport default Profile\n","const fetch = require('node-fetch');\n\nconst xml2js = require('xml2js');\n\nconst util = require('./util');\n\nconst urls = require('./url');\n\nconst constant = require('./constant');\n\nconst defaultOptions = {\n  protocol: 'https',\n  path: '/cas',\n  version: constant.CAS_VERSION_3_0,\n  proxy_callback_url: '',\n  validation_proxy: false,\n  validation_proxy_protocol: '',\n  validation_proxy_endpoint: '',\n  validation_proxy_path: ''\n};\n\nclass CasClient {\n  constructor(endpoint, options = {}) {\n    if (util.isEmpty(endpoint)) {\n      util.throwError('Missing endpoint');\n    }\n\n    let version = options.version || defaultOptions.version;\n\n    if (!constant.CAS_VERSIONS.includes(version)) {\n      util.throwError('Unsupported CAS Version');\n    }\n\n    this.endpoint = endpoint;\n    this.path = options.path || defaultOptions.path;\n    this.protocol = options.protocol || defaultOptions.protocol;\n    this.version = options.version || defaultOptions.version;\n    this.proxy_callback_url = options.proxy_callback_url || defaultOptions.proxy_callback_url;\n    this.validation_proxy = options.validation_proxy || defaultOptions.validation_proxy;\n    this.validation_proxy_protocol = options.validation_proxy_protocol || defaultOptions.validation_proxy_protocol;\n    this.validation_proxy_endpoint = options.validation_proxy_endpoint || defaultOptions.validation_proxy_endpoint;\n    this.validation_proxy_path = options.validation_proxy_path || defaultOptions.validation_proxy_path;\n    this.redirectUrl = util.getCurrentUrl();\n  }\n\n  auth(gateway = false) {\n    return new Promise((resolve, reject) => {\n      /**\n       * Save ticket to sessionStorage if exists\n       */\n      const ticket = util.getParamFromCurrentUrl('ticket');\n      console.log(\"ticket\",ticket);\n      if (util.isEmpty(ticket)) {\n        let status = util.getParamFromCurrentUrl('status');\n\n        if (status === constant.CAS_STATUS_IN_PROCESS) {\n          this._handleFailsValdiate(reject, {\n            type: constant.CAS_ERROR_AUTH_ERROR,\n            message: 'Missing ticket from return url'\n          });\n        } else {\n          window.location.href = urls.getLoginUrl(this, gateway);\n        }\n      } else {\n        this._validateTicket(ticket, resolve, reject);\n      }\n    });\n  }\n\n  logout(redirectPath = '') {\n    window.location.href = urls.getLogoutUrl(this, redirectPath);\n  }\n\n  _getSuccessResponse(user, pgtIou = null) {\n    let response = {\n      currentUrl: window.location.origin + window.location.pathname,\n      currentPath: window.location.pathname,\n      user: user\n    };\n\n    if (pgtIou) {\n      response.pgtIou = pgtIou;\n    }\n\n    return response;\n  }\n\n  _validateTicket(ticket, resolve, reject) {\n    let version = this.version;\n    let content_type;\n\n    switch (version) {\n      case constant.CAS_VERSION_2_0:\n        content_type = 'text/xml';\n        break;\n\n      case constant.CAS_VERSION_3_0:\n        content_type = 'application/json';\n        break;\n\n      default:\n        throw util.throwError('Unsupported CAS Version');\n    }\n\n    fetch(urls.getValidateUrl(this, ticket), {\n      headers: {\n        'Content-Type': content_type\n      }\n    }).then(function (response) {\n      console.log(\"response\", response)\n      response.text().then(function (text) {\n        switch (version) {\n          case constant.CAS_VERSION_2_0:\n            xml2js.parseStringPromise(text).then(function (result) {\n              let response = result['cas:serviceResponse'];\n\n              if (response['cas:authenticationSuccess']) {\n                let successes = response['cas:authenticationSuccess'];\n\n                if (successes.length) {\n                  let user = successes[0]['cas:user'][0];\n                  let pgtIou = null;\n\n                  if (!util.isEmpty(this.proxy_callback_url)) {\n                    pgtIou = successes[0]['cas:proxyGrantingTicket'][0];\n                  }\n\n                  this._handleSuccessValdiate(resolve, user, pgtIou);\n\n                  this._handleSuccessValdiate(resolve, user);\n                }\n              } else {\n                let failures = response['cas:authenticationFailure'];\n\n                if (failures.length) {\n                  this._handleFailsValdiate(reject, {\n                    type: constant.CAS_ERROR_AUTH_ERROR,\n                    code: failures[0].$.code.trim(),\n                    message: failures[0]._.trim()\n                  });\n                }\n              }\n            }.bind(this)).catch(function (error) {\n              this._handleFailsValdiate(reject, {\n                type: constant.CAS_ERROR_PARSE_RESPONSE,\n                message: 'Failed to parse response',\n                exception: error\n              });\n            }.bind(this));\n            break;\n\n          case constant.CAS_VERSION_3_0:\n            try {\n              let json = JSON.parse(text);\n\n              if (json.serviceResponse) {\n                if (json.serviceResponse.authenticationSuccess) {\n                  let user = json.serviceResponse.authenticationSuccess.user;\n                  let pgtIou = null;\n\n                  if (!util.isEmpty(this.proxy_callback_url)) {\n                    pgtIou = json.serviceResponse.authenticationSuccess.proxyGrantingTicket;\n                  }\n\n                  this._handleSuccessValdiate(resolve, user, pgtIou);\n                } else {\n                  this._handleFailsValdiate(reject, {\n                    type: constant.CAS_ERROR_AUTH_ERROR,\n                    code: json.serviceResponse.authenticationFailure.code,\n                    message: json.serviceResponse.authenticationFailure.description\n                  });\n                }\n              }\n            } catch (error) {\n              this._handleFailsValdiate(reject, {\n                type: constant.CAS_ERROR_PARSE_RESPONSE,\n                message: 'Failed to parse response',\n                exception: error\n              });\n            }\n\n            break;\n\n          default:\n            throw util.throwError('Unsupported CAS Version');\n        }\n\n        throw util.throwError('Stop...');\n      }.bind(this)).catch(function (error) {\n        this._handleFailsValdiate(reject, {\n          type: constant.CAS_ERROR_PARSE_RESPONSE,\n          message: 'Failed to parse response',\n          exception: error\n        });\n      }.bind(this));\n    }.bind(this)).catch(function (error) {\n      this._handleFailsValdiate(reject, {\n        type: constant.CAS_ERROR_FETCH,\n        message: 'Failed to connect CAS server',\n        exception: error\n      });\n    }.bind(this));\n  }\n\n  _handleSuccessValdiate(callback, user, pgtIou = null) {\n    callback(this._getSuccessResponse(user, pgtIou));\n  }\n\n  _handleFailsValdiate(callback, error) {\n    error.currentUrl = window.location.origin + window.location.pathname;\n    error.currentPath = window.location.pathname;\n    callback(error);\n  }\n\n}\n\nexport default CasClient;\nexport { constant };\n","import {Fragment, useContext, useEffect, useRef, useState} from 'react'\nimport Header from './components/Header'\nimport Progress from './components/Progress'\nimport Score from './components/Score'\nimport Question from './components/Question'\nimport Leaderboard from './components/Leaderboard'\nimport SaveScore from './components/SaveScore'\nimport Profile from './components/Profile'\nimport {loginPlayer, checkGame, authPlayer, getQuestions, postAnswer} from './utils/engine.helpers'\nimport CasClient, { constant } from './utils/react-cas-client';\n\nimport { ReactSession } from 'react-client-session';\nReactSession.setStoreType(\"localStorage\");\n\nlet casEndpoint = \"sso.uc.cl\";\nlet casOptions = { version: constant.CAS_VERSION_2_0 };\n\nlet casClient = new CasClient(casEndpoint, casOptions);\n\nfunction attemptCasLogin(gateway) {\n\tconst service = \"https://fcom-actualidad.github.io/test/\";\n\treturn new Promise((resolve, reject) => {\n\t\tconsole.log(\"ASDASDASDA\")\n\t\tcasClient\n\t\t\t.auth(gateway, service)\n\t\t\t.then((successRes) => {\n\t\t\t\t// Login user in state / locationStorage ()\n\t\t\t\t// eg. loginUser(response.user);\n\t\t\t\tReactSession.set(\"contextUser\",successRes.mail );\n\t\t\t\tconsole.log(\"success\")\n\t\t\t\tconsole.log(successRes)\n\t\t\t\tconsole.log(successRes.mail)\n\t\t\t\t// Update current path to trim any extra params in url\n\t\t\t\t// eg. this.props.history.replace(response.currentPath);\n\t\t\t})\n\t\t\t.catch((errorRes) => {\n\t\t\t\tconsole.log(errorRes)\n\t\t\t\treject(errorRes);\n\t\t\t});\n\t});\n}\n\nfunction logout(path = \"/\") {\n\tcasClient.logout(\"/\");\n}\n\nconst decodeString = string => {\n\tconst text = document.createElement('textarea')\n\ttext.innerHTML = string\n\treturn text.value\n}\n\nconst calculatePercentage = (fraction, total) => {\n\tif (fraction === 0 || total === 0) return 0\n\treturn Math.floor((fraction * 100) / total)\n}\n\nfunction App() {\n\tlet userInit = null;\n\tif(ReactSession.get(\"name\") !== undefined){\n\t\tuserInit = {name:ReactSession.get(\"name\"),email:ReactSession.get(\"email\")}\n\t}\n\n\tconst [currentPlayer, setCurrentPlayer] = useState(userInit)\n\tconst [error, setError] = useState(false)\n\tconst [isShown, setIsSHown] = useState(false);\n\tconst [gameInitialized, setGameInitialized] = useState(false);\n\tconst [loading, setLoading] = useState(false)\n\tconst [loadingQuestions, setLoadingQuestions] = useState(false)\n\tconst [withTimer, setWithTimer] = useState(true)\n\tconst [timer, setTimer] = useState(0)\n\tconst [questionsBank, setQuestionsBank] = useState([])\n\tconst [currentCategory, setCurrentCategory] = useState('General Knowledge')\n\tconst [currentQuestion, setCurrentQuestion] = useState(null)\n\tconst [questionNum, setQuestionNum] = useState(0)\n\tconst [totalQuestions, setTotalQuestions] = useState(0)\n\tconst [answers, setAnswers] = useState([])\n\tconst [score, setScore] = useState(0)\n\tconst [quizInProgress, setQuizInProgress] = useState(false)\n\tconst [gameEnded, setGameEnded] = useState(false)\n\tconst [profile, setProfile] = useState(false)\n\n\n\tconst togglePassword = () => {\n\t\tsetIsSHown((isShown) => !isShown);\n\t};\n\n\tconst resetGame = () => {\n\t\tsetTimer(0)\n\t\tsetQuestionsBank([])\n\t\tsetCurrentCategory('General Knowledge')\n\t\tsetCurrentQuestion(null)\n\t\tsetQuestionNum(0)\n\t\tsetTotalQuestions(0)\n\t\tsetAnswers([])\n\t\tsetScore(0)\n\t\tsetQuizInProgress(false)\n\t\tsetGameEnded(false)\n\t}\n\n\n//función para realizar login en motor\n\tconst handleSubmitLogin = async e => {\n\t\te.preventDefault()\n\t\tsetLoading(true);\n\t\tresetGame()\n\t\tconst email = e.target.email.value;\n\t\tconst pass = e.target.password.value;\n\n\t\tif (!currentPlayer) {\n\t\t\tawait (async function () {\n\t\t\t\ttry {\n\t\t\t\t\tawait attemptCasLogin(false);\n\t\t\t\t\tconsole.log(\"after login\")\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(error);\n\t\t\t\t}\n\t\t\t})();\n\t\t}\n\n\t\t//const results = await loginPlayer({email,password:pass});\n\t\tconst results = {code:300,data:{name:\"Juanito\",email:email}}\n\t\tif (results.code === 200){\n\t\t\tsetCurrentPlayer(results.data);\n\t\t\tawait authPlayer({email,password:pass});\n\t\t\tconsole.log(\"logueado!\");\n\t\t} else {\n\t\t\tsetError(results.errors);\n\t\t}\n\t\tsetLoading(false);\n\t}\n\n//función para cerrar sesión\n\tconst handleLogout = async e =>{\n\t\te.preventDefault()\n\t\tresetGame()\n\t\tReactSession.remove(\"userName\");\n\t\tReactSession.remove(\"name\");\n\t\tReactSession.remove(\"email\");\n\t\tReactSession.remove(\"gameName\");\n\t\tReactSession.remove(\"gameId\");\n\t\tReactSession.remove(\"token\");\n\t\tsetProfile(false)\n\t\tsetCurrentPlayer(null);\n\t}\n\n\tconst handleMyProfile = async e =>{\n\t\te.preventDefault()\n\t\tsetProfile(true);\n\t}\n\n\tconst handleHome= async e =>{\n\t\te.preventDefault()\n\t\tsetProfile(false);\n\t}\n\n\tconst handleSelectGameSubmit = async e =>{\n\t\te.preventDefault()\n\t\tsetLoading(true);\n\t\tresetGame()\n\t\tconst gameName = e.target.gameCode.value;\n\t\tconst results = await checkGame(gameName);\n\t\tif (results.code === 200){\n\t\t\tsetGameInitialized(true);\n\t\t\tlet questions = await getQuestions(results.data._id);\n\t\t\tif (questions.code === 200){\n\t\t\t\tquestions.data = questions.data.sort(() => Math.random() - 0.5);\n\t\t\t\tquestions.data.forEach(a=>{\n\t\t\t\t\ta.options = a.options.sort(() => Math.random() - 0.5);\n\t\t\t\t})\n\t\t\t\tsetTotalQuestions(questions.data.length);\n\t\t\t\tsetQuestionsBank(questions.data);\n\t\t\t\tsetQuizInProgress(true)\n\t\t\t} else if(questions.code === 405) {\n\t\t\t\tsetGameEnded(true);\n\t\t\t} else {\n\t\t\t\tsetError(questions.errors);\n\t\t\t}\n\n\n\t\t\t//TEMPORAL, SOLO PRUEBA\n\t\t\t// setQuestionsBank(\n\t\t\t// \t[\n\t\t\t// \t\t{id: `00-${Date.now()}`,\n\t\t\t// \t\tquestion: \"Esta es la pregunta 01\",\n\t\t\t// \t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\t// \t\ttime: 30},\n\t\t\t// \t\t{id: `01-${Date.now()}`,\n\t\t\t// \t\tquestion: \"Esta es la pregunta 02\",\n\t\t\t// \t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\t// \t\ttime: 20},\n\t\t\t// \t\t{id: `02-${Date.now()}`,\n\t\t\t// \t\t\tquestion: \"Esta es la pregunta 03\",\n\t\t\t// \t\t\toptions: [\"opción01\",\"opción02\",\"opción03\"].sort(() => Math.random() - 0.5),\n\t\t\t// \t\ttime: 25}\n\t\t\t// \t]\n\t\t\t// )\n\n\t\t} else {\n\t\t\tsetError(results.errors);\n\t\t}\n\t\tsetLoading(false);\n\n\n\t}\n\n\tconst handleAnswers = data => {\n\t\tif (!data) return;\n\t\tconsole.log(\"Post answer:\", data,data.questionId, data.option, data.time);\n\t\tpostAnswer(data.questionId, data.option, data.time);\n\t\tsetAnswers(prevData => [...prevData, data])\n\t\tsetScore(score + (data.correct ? 1 : 0))\n\t}\n\n\tconst setNewScoreAndQuestionNum = useRef()\n\n\tsetNewScoreAndQuestionNum.current = () => {\n\t\tlet newScore = score;\n\n\t\tfor (const answer of answers) {\n\t\t\tif (answer !== null && answer.isCorrectAnswer) newScore += 1;\n\t\t}\n\n\t\tsetScore(newScore)\n\n\t\tif (questionNum < totalQuestions) {\n\t\t\tsetCurrentQuestion(questionsBank[questionNum]);\n\t\t\tsetQuestionNum(questionNum + 1)\n\t\t}\n\n\t\tif (questionNum === totalQuestions) setGameEnded(true)\n\t}\n\n\n\tuseEffect(() => {\n\t\tsetCurrentQuestion(questionsBank[0])\n\t\tsetQuestionNum(1)\n\t}, [questionsBank])\n\n\tuseEffect(() => {\n\t\tif (!answers.length) return\n\t\tconst timeout = setTimeout(() => setNewScoreAndQuestionNum.current(), 1500)\n\t\treturn () => clearTimeout(timeout)\n\t}, [answers])\n\n\tuseEffect(() => {\n\t\tconst timeout = setTimeout(() => setError(false), 5000)\n\t\treturn () => clearTimeout(timeout)\n\t}, [error])\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className='game-title'><a onClick={handleHome} href=\"/\"><h1> 🚀 TEST DE ACTUALIDAD</h1></a></div>\n\t\t\t<Header\n\t\t\t\thandleSubmit={handleSubmitLogin}\n\t\t\t\tsetWithTimer={setWithTimer}\n\t\t\t\tloading={loading}\n\t\t\t\tloadingQuestions={loadingQuestions}\n\t\t\t\tquizInProgress={quizInProgress}\n\t\t\t\tisShown = {isShown}\n\t\t\t\ttogglePassword = {togglePassword}\n\t\t\t\tcurrentPlayer = {currentPlayer}\n\t\t\t\thandleLogout = {handleLogout}\n\t\t\t\thandleProfile = {handleMyProfile}\n\t\t\t/>\n\n\t\t\t<div className='container'>\n\t\t\t\t{error && <div className='error-message'>{error}</div>}\n\n\t\t\t\t{/*Loader visual para que el usuario sepa que se está ejectuando un proceso*/}\n\n\t\t\t\t{loading && (\n\t\t\t\t\t<p>\n\t\t\t\t\t\tCargando... <span className='loader'>⏳</span>\n\t\t\t\t\t</p>\n\t\t\t\t)}\n\n\t\t\t\t{\n\t\t\t\t\tcurrentPlayer && profile && (!quizInProgress || gameEnded) && (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t<Profile\n\t\t\t\t\t\t\t\tuser={currentPlayer}\n\t\t\t\t\t\t\t\tsetError={setError}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Fragment>\n\n\t\t\t\t\t)\n\t\t\t\t}\n\n\n\t\t\t\t{\n\t\t\t\t\tcurrentPlayer && !profile && !quizInProgress && !gameInitialized && (\n\t\t\t\t\t\t<form onSubmit={handleSelectGameSubmit}>\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<p>Para responder el test debes indicar primero el código específico de la sesión que te corresponde</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t<label htmlFor='gameCode'>Código de juego</label>\n\t\t\t\t\t\t\t\t<input type=\"text\"\n\t\t\t\t\t\t\t\t\t   id='gameCode'\n\t\t\t\t\t\t\t\t\t   defaultValue='secreto'\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t</input>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='form-group'>\n\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\tclassName='btn'\n\t\t\t\t\t\t\t\t\ttype='submit'\n\t\t\t\t\t\t\t\t\tdisabled={loading || quizInProgress}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{loading\n\t\t\t\t\t\t\t\t\t\t? 'Loading...'\n\t\t\t\t\t\t\t\t\t\t: quizInProgress\n\t\t\t\t\t\t\t\t\t\t\t? 'En juego'\n\t\t\t\t\t\t\t\t\t\t\t: 'Responder'}\n\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</form>\n\t\t\t\t\t)\n\t\t\t\t}\n\n\t\t\t\t{currentQuestion && !gameEnded && (\n\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t<div className='flex-between'>\n\t\t\t\t\t\t\t<Progress\n\t\t\t\t\t\t\t\tquestionNum={questionNum}\n\t\t\t\t\t\t\t\ttotalQuestions={totalQuestions}\n\t\t\t\t\t\t\t\tpercentage={calculatePercentage(questionNum, totalQuestions)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Score\n\t\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\t\t\twithTimer={withTimer}\n\t\t\t\t\t\t\t\ttimer={timer}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<Question\n\t\t\t\t\t\t\tquestion={currentQuestion}\n\t\t\t\t\t\t\thandleAnswers={handleAnswers}\n\t\t\t\t\t\t\tlastQuestion={questionNum === totalQuestions}\n\t\t\t\t\t\t\tgameEnded={gameEnded}\n\t\t\t\t\t\t\tsetTimer={setTimer}\n\t\t\t\t\t\t\twithTimer={withTimer}\n\t\t\t\t\t\t\ttimer={timer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Fragment>\n\t\t\t\t)}\n\n\t\t\t\t{gameEnded && !profile && (\n\t\t\t\t\t<SaveScore\n\t\t\t\t\t\tcategory={currentCategory}\n\t\t\t\t\t\tscore={score}\n\t\t\t\t\t\tsetError={setError}\n\t\t\t\t\t\tresetGame={resetGame}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t{gameEnded && !profile && (\n\t\t\t\t\t<Leaderboard setError={setError} />\n\t\t\t\t)}\n\n\n\t\t\t</div>\n\t\t</Fragment>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n","const isEmpty = obj => {\n  return obj === undefined || obj === null || obj.toString().replace(/\\s/g, '') === '';\n};\n\nconst throwError = err => {\n  throw new Error('[CasClient]: ' + err);\n};\n\nconst getCurrentUrl = (withoutTicket = true) => {\n  let url = window.location.href;\n\n  if (withoutTicket) {\n    return url.replace(/(^|[&?])ticket(=[^&]*)?/, '');\n  }\n\n  return url;\n};\n\nconst getParamFromCurrentUrl = param => {\n  return new URL(window.location.href).searchParams.get(param);\n};\n\nconst getFullProtocol = protocol => {\n  return ['http', 'http:'].includes(protocol) ? 'http://' : 'https://';\n};\n\nconst isParamExistsInUrl = (url, param) => {\n  const value = new URL(url).searchParams.get(param);\n  return value !== null;\n};\n\nexport { isEmpty, throwError, getCurrentUrl, getParamFromCurrentUrl, getFullProtocol, isParamExistsInUrl };\n","const CAS_VERSION_2_0 = '2.0';\nconst CAS_VERSION_3_0 = '3.0';\nconst CAS_VERSIONS = [CAS_VERSION_2_0, CAS_VERSION_3_0];\nconst CAS_STATUS_IN_PROCESS = 'in_process';\nexport { CAS_VERSION_2_0, CAS_VERSION_3_0, CAS_VERSIONS, CAS_STATUS_IN_PROCESS };\n/**\n * Errors\n */\n\nconst CAS_ERROR_FETCH = 'FETCH_ERROR';\nconst CAS_ERROR_PARSE_RESPONSE = 'PARSE_RESPONSE_ERROR';\nconst CAS_ERROR_AUTH_ERROR = 'AUTH_ERROR';\nexport { CAS_ERROR_FETCH, CAS_ERROR_PARSE_RESPONSE, CAS_ERROR_AUTH_ERROR };"],"sourceRoot":""}